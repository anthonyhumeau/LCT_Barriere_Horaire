[ @file = "Rez.mc"; @line = 1; ]
module Rez {
    [ @file = "Rez.mc"; @line = 1; ]
    <init> {
    }
    [ @file = "Rez.mc"; @line = 2; ]
    module Drawables {
        [ @file = "Rez.mc"; @line = 2; ]
        <init> {
        }
        [ @file = "Rez.mc"; @line = 3; ]
        import Toybox.Lang;
        [ @file = "Rez.mc"; @line = 4; initialized = true; ]
        var LauncherIcon as Symbol;
    }
    [ @file = "Rez.mc"; @line = 6; ]
    module Fonts {
        [ @file = "Rez.mc"; @line = 6; ]
        <init> {
        }
    }
    [ @file = "Rez.mc"; @line = 8; ]
    module JsonData {
        [ @file = "Rez.mc"; @line = 8; ]
        <init> {
        }
        [ @file = "Rez.mc"; @line = 9; ]
        import Toybox.Lang;
        [ @file = "Rez.mc"; @line = 10; initialized = true; ]
        var Layouts as Symbol;
        [ @file = "Rez.mc"; @line = 11; initialized = true; ]
        var Layout0 as Symbol;
        [ @file = "Rez.mc"; @line = 12; initialized = true; ]
        var Layout1 as Symbol;
        [ @file = "Rez.mc"; @line = 13; initialized = true; ]
        var Layout2 as Symbol;
        [ @file = "Rez.mc"; @line = 14; initialized = true; ]
        var Layout3 as Symbol;
        [ @file = "Rez.mc"; @line = 15; initialized = true; ]
        var Layout4 as Symbol;
        [ @file = "Rez.mc"; @line = 16; initialized = true; ]
        var Layout5 as Symbol;
        [ @file = "Rez.mc"; @line = 17; initialized = true; ]
        var Layout6 as Symbol;
        [ @file = "Rez.mc"; @line = 18; initialized = true; ]
        var Layout7 as Symbol;
        [ @file = "Rez.mc"; @line = 19; initialized = true; ]
        var Layout8 as Symbol;
        [ @file = "Rez.mc"; @line = 20; initialized = true; ]
        var Layout9 as Symbol;
        [ @file = "Rez.mc"; @line = 21; initialized = true; ]
        var Layout10 as Symbol;
        [ @file = "Rez.mc"; @line = 22; initialized = true; ]
        var Layout11 as Symbol;
        [ @file = "Rez.mc"; @line = 23; initialized = true; ]
        var Layout12 as Symbol;
    }
    [ @file = "Rez.mc"; @line = 25; ]
    module Layouts {
        [ @file = "Rez.mc"; @line = 25; ]
        <init> {
        }
        [ @file = "Rez.mc"; @line = 26; ]
        import Toybox.Lang;
        [ @file = "Rez.mc"; @line = 27; ]
        using Toybox.WatchUi;
        [ @file = "Rez.mc"; @line = 28; ]
        using Toybox.WatchUi as :Ui;
        [ @file = "Rez.mc"; @line = 29; ]
        using Toybox.Graphics;
        [ @file = "Rez.mc"; @line = 30; ]
        using Toybox.Graphics as :Gfx;
        [ @file = "Rez.mc"; @line = 32; ]
        function MainLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
[ "Rez.mc" 34 ]
            %rez_cmp_local_var_dc_getHeight.1 = local;
            %tmp.2 = lgetv %dc;
            %tmp.3 = getv const %tmp.2 :getHeight;
            %tmp.4 = invoke %tmp.2 %tmp.3();
            lputv %rez_cmp_local_var_dc_getHeight.1 %tmp.4;
[ "Rez.mc" 35 ]
            %rez_cmp_local_var_dc_getWidth.2 = local;
            %tmp.6 = lgetv %dc;
            %tmp.7 = getv const %tmp.6 :getWidth;
            %tmp.8 = invoke %tmp.6 %tmp.7();
            lputv %rez_cmp_local_var_dc_getWidth.2 %tmp.8;
[ "Rez.mc" 37 ]
            %rez_cmp_local_custom_drawable_18912007212065176740.3 = local;
            %tmp.12 = getv ? :Background;
            %tmp.9 = newc %tmp.12;
            %tmp.13 = dup %tmp.9;
            %tmp.14 = getv const %tmp.13 :initialize;
            %tmp.15 = dup %tmp.9;
            invoke %tmp.15 %tmp.14();
            lputv %rez_cmp_local_custom_drawable_18912007212065176740.3 %tmp.9;
[ "Rez.mc" 38 ]
            %rez_cmp_local_textarea_label.4 = local;
            %tmp.18 = getm $.Toybox.WatchUi;
            %tmp.19 = getv %tmp.18 :TextArea;
            %tmp.16 = newc %tmp.19;
            %tmp.20 = dup %tmp.16;
            %tmp.21 = getv const %tmp.20 :initialize;
            %tmp.22 = dup %tmp.16;
            %tmp.23 = newd 9;
            %tmp.24 = :identifier;
            %tmp.25 = "label";
            %tmp.26 = dup %tmp.23;
            %tmp.27 = aputv %tmp.26 %tmp.24 %tmp.25;
            %tmp.28 = :color;
            %tmp.29 = getm $.Toybox.Graphics;
            %tmp.30 = getv %tmp.29 :COLOR_WHITE;
            %tmp.31 = dup %tmp.27;
            %tmp.32 = aputv %tmp.31 %tmp.28 %tmp.30;
            %tmp.33 = :width;
            %tmp.35 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.36 = 100;
            %tmp.37 = 100.0;
            %tmp.38 = div %tmp.36 %tmp.37;
            %tmp.39 = mul %tmp.35 %tmp.38;
            %tmp.40 = dup %tmp.32;
            %tmp.41 = aputv %tmp.40 %tmp.33 %tmp.39;
            %tmp.42 = :locX;
            %tmp.44 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.45 = 2;
            %tmp.46 = div %tmp.44 %tmp.45;
            %tmp.48 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.49 = 100;
            %tmp.50 = 100.0;
            %tmp.51 = div %tmp.49 %tmp.50;
            %tmp.52 = mul %tmp.48 %tmp.51;
            %tmp.53 = 2;
            %tmp.54 = div %tmp.52 %tmp.53;
            %tmp.55 = sub %tmp.46 %tmp.54;
            %tmp.56 = dup %tmp.41;
            %tmp.57 = aputv %tmp.56 %tmp.42 %tmp.55;
            %tmp.58 = :locY;
            %tmp.60 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.61 = 30;
            %tmp.62 = 100.0;
            %tmp.63 = div %tmp.61 %tmp.62;
            %tmp.64 = mul %tmp.60 %tmp.63;
            %tmp.65 = dup %tmp.57;
            %tmp.66 = aputv %tmp.65 %tmp.58 %tmp.64;
            %tmp.67 = :text;
            %tmp.68 = "";
            %tmp.69 = dup %tmp.66;
            %tmp.70 = aputv %tmp.69 %tmp.67 %tmp.68;
            %tmp.71 = :justification;
            %tmp.72 = getm $.Toybox.Graphics;
            %tmp.73 = getv %tmp.72 :TEXT_JUSTIFY_CENTER;
            %tmp.74 = dup %tmp.70;
            %tmp.75 = aputv %tmp.74 %tmp.71 %tmp.73;
            %tmp.76 = :height;
            %tmp.78 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.79 = 100;
            %tmp.80 = 100.0;
            %tmp.81 = div %tmp.79 %tmp.80;
            %tmp.82 = mul %tmp.78 %tmp.81;
            %tmp.83 = dup %tmp.75;
            %tmp.84 = aputv %tmp.83 %tmp.76 %tmp.82;
            %tmp.85 = :font;
            %tmp.86 = newa Array<Graphics.FontType> 3;
            %tmp.87 = getm $.Toybox.Graphics;
            %tmp.88 = getv %tmp.87 :FONT_SYSTEM_LARGE;
            %tmp.89 = dup %tmp.86;
            %tmp.90 = aputv %tmp.89 0 %tmp.88;
            %tmp.91 = getm $.Toybox.Graphics;
            %tmp.92 = getv %tmp.91 :FONT_SYSTEM_MEDIUM;
            %tmp.93 = dup %tmp.90;
            %tmp.94 = aputv %tmp.93 1 %tmp.92;
            %tmp.95 = getm $.Toybox.Graphics;
            %tmp.96 = getv %tmp.95 :FONT_SYSTEM_SMALL;
            %tmp.97 = dup %tmp.94;
            %tmp.98 = aputv %tmp.97 2 %tmp.96;
            %tmp.99 = dup %tmp.84;
            %tmp.100 = aputv %tmp.99 %tmp.85 %tmp.98;
            invoke %tmp.22 %tmp.21(%tmp.100);
            lputv %rez_cmp_local_textarea_label.4 %tmp.16;
[ "Rez.mc" 39 ]
            %rez_cmp_local_textarea_subLabel.5 = local;
            %tmp.103 = getm $.Toybox.WatchUi;
            %tmp.104 = getv %tmp.103 :TextArea;
            %tmp.101 = newc %tmp.104;
            %tmp.105 = dup %tmp.101;
            %tmp.106 = getv const %tmp.105 :initialize;
            %tmp.107 = dup %tmp.101;
            %tmp.108 = newd 9;
            %tmp.109 = :identifier;
            %tmp.110 = "subLabel";
            %tmp.111 = dup %tmp.108;
            %tmp.112 = aputv %tmp.111 %tmp.109 %tmp.110;
            %tmp.113 = :color;
            %tmp.114 = getm $.Toybox.Graphics;
            %tmp.115 = getv %tmp.114 :COLOR_WHITE;
            %tmp.116 = dup %tmp.112;
            %tmp.117 = aputv %tmp.116 %tmp.113 %tmp.115;
            %tmp.118 = :width;
            %tmp.120 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.121 = 100;
            %tmp.122 = 100.0;
            %tmp.123 = div %tmp.121 %tmp.122;
            %tmp.124 = mul %tmp.120 %tmp.123;
            %tmp.125 = dup %tmp.117;
            %tmp.126 = aputv %tmp.125 %tmp.118 %tmp.124;
            %tmp.127 = :locX;
            %tmp.129 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.130 = 2;
            %tmp.131 = div %tmp.129 %tmp.130;
            %tmp.133 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.134 = 100;
            %tmp.135 = 100.0;
            %tmp.136 = div %tmp.134 %tmp.135;
            %tmp.137 = mul %tmp.133 %tmp.136;
            %tmp.138 = 2;
            %tmp.139 = div %tmp.137 %tmp.138;
            %tmp.140 = sub %tmp.131 %tmp.139;
            %tmp.141 = dup %tmp.126;
            %tmp.142 = aputv %tmp.141 %tmp.127 %tmp.140;
            %tmp.143 = :locY;
            %tmp.145 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.146 = 45;
            %tmp.147 = 100.0;
            %tmp.148 = div %tmp.146 %tmp.147;
            %tmp.149 = mul %tmp.145 %tmp.148;
            %tmp.150 = dup %tmp.142;
            %tmp.151 = aputv %tmp.150 %tmp.143 %tmp.149;
            %tmp.152 = :text;
            %tmp.153 = "";
            %tmp.154 = dup %tmp.151;
            %tmp.155 = aputv %tmp.154 %tmp.152 %tmp.153;
            %tmp.156 = :justification;
            %tmp.157 = getm $.Toybox.Graphics;
            %tmp.158 = getv %tmp.157 :TEXT_JUSTIFY_CENTER;
            %tmp.159 = dup %tmp.155;
            %tmp.160 = aputv %tmp.159 %tmp.156 %tmp.158;
            %tmp.161 = :height;
            %tmp.163 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.164 = 100;
            %tmp.165 = 100.0;
            %tmp.166 = div %tmp.164 %tmp.165;
            %tmp.167 = mul %tmp.163 %tmp.166;
            %tmp.168 = dup %tmp.160;
            %tmp.169 = aputv %tmp.168 %tmp.161 %tmp.167;
            %tmp.170 = :font;
            %tmp.171 = newa Array<Graphics.FontType> 3;
            %tmp.172 = getm $.Toybox.Graphics;
            %tmp.173 = getv %tmp.172 :FONT_SYSTEM_SMALL;
            %tmp.174 = dup %tmp.171;
            %tmp.175 = aputv %tmp.174 0 %tmp.173;
            %tmp.176 = getm $.Toybox.Graphics;
            %tmp.177 = getv %tmp.176 :FONT_SYSTEM_TINY;
            %tmp.178 = dup %tmp.175;
            %tmp.179 = aputv %tmp.178 1 %tmp.177;
            %tmp.180 = getm $.Toybox.Graphics;
            %tmp.181 = getv %tmp.180 :FONT_SYSTEM_XTINY;
            %tmp.182 = dup %tmp.179;
            %tmp.183 = aputv %tmp.182 2 %tmp.181;
            %tmp.184 = dup %tmp.169;
            %tmp.185 = aputv %tmp.184 %tmp.170 %tmp.183;
            invoke %tmp.107 %tmp.106(%tmp.185);
            lputv %rez_cmp_local_textarea_subLabel.5 %tmp.101;
[ "Rez.mc" 40 ]
            %rez_cmp_local_textarea_value.6 = local;
            %tmp.188 = getm $.Toybox.WatchUi;
            %tmp.189 = getv %tmp.188 :TextArea;
            %tmp.186 = newc %tmp.189;
            %tmp.190 = dup %tmp.186;
            %tmp.191 = getv const %tmp.190 :initialize;
            %tmp.192 = dup %tmp.186;
            %tmp.193 = newd 9;
            %tmp.194 = :identifier;
            %tmp.195 = "value";
            %tmp.196 = dup %tmp.193;
            %tmp.197 = aputv %tmp.196 %tmp.194 %tmp.195;
            %tmp.198 = :color;
            %tmp.199 = getm $.Toybox.Graphics;
            %tmp.200 = getv %tmp.199 :COLOR_WHITE;
            %tmp.201 = dup %tmp.197;
            %tmp.202 = aputv %tmp.201 %tmp.198 %tmp.200;
            %tmp.203 = :width;
            %tmp.205 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.206 = 100;
            %tmp.207 = 100.0;
            %tmp.208 = div %tmp.206 %tmp.207;
            %tmp.209 = mul %tmp.205 %tmp.208;
            %tmp.210 = dup %tmp.202;
            %tmp.211 = aputv %tmp.210 %tmp.203 %tmp.209;
            %tmp.212 = :locX;
            %tmp.214 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.215 = 2;
            %tmp.216 = div %tmp.214 %tmp.215;
            %tmp.218 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.219 = 100;
            %tmp.220 = 100.0;
            %tmp.221 = div %tmp.219 %tmp.220;
            %tmp.222 = mul %tmp.218 %tmp.221;
            %tmp.223 = 2;
            %tmp.224 = div %tmp.222 %tmp.223;
            %tmp.225 = sub %tmp.216 %tmp.224;
            %tmp.226 = dup %tmp.211;
            %tmp.227 = aputv %tmp.226 %tmp.212 %tmp.225;
            %tmp.228 = :locY;
            %tmp.230 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.231 = 50;
            %tmp.232 = 100.0;
            %tmp.233 = div %tmp.231 %tmp.232;
            %tmp.234 = mul %tmp.230 %tmp.233;
            %tmp.235 = dup %tmp.227;
            %tmp.236 = aputv %tmp.235 %tmp.228 %tmp.234;
            %tmp.237 = :text;
            %tmp.238 = "";
            %tmp.239 = dup %tmp.236;
            %tmp.240 = aputv %tmp.239 %tmp.237 %tmp.238;
            %tmp.241 = :justification;
            %tmp.242 = getm $.Toybox.Graphics;
            %tmp.243 = getv %tmp.242 :TEXT_JUSTIFY_CENTER;
            %tmp.244 = dup %tmp.240;
            %tmp.245 = aputv %tmp.244 %tmp.241 %tmp.243;
            %tmp.246 = :height;
            %tmp.248 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.249 = 100;
            %tmp.250 = 100.0;
            %tmp.251 = div %tmp.249 %tmp.250;
            %tmp.252 = mul %tmp.248 %tmp.251;
            %tmp.253 = dup %tmp.245;
            %tmp.254 = aputv %tmp.253 %tmp.246 %tmp.252;
            %tmp.255 = :font;
            %tmp.256 = newa Array<Graphics.FontType> 3;
            %tmp.257 = getm $.Toybox.Graphics;
            %tmp.258 = getv %tmp.257 :FONT_SYSTEM_NUMBER_HOT;
            %tmp.259 = dup %tmp.256;
            %tmp.260 = aputv %tmp.259 0 %tmp.258;
            %tmp.261 = getm $.Toybox.Graphics;
            %tmp.262 = getv %tmp.261 :FONT_SYSTEM_NUMBER_MEDIUM;
            %tmp.263 = dup %tmp.260;
            %tmp.264 = aputv %tmp.263 1 %tmp.262;
            %tmp.265 = getm $.Toybox.Graphics;
            %tmp.266 = getv %tmp.265 :FONT_SYSTEM_NUMBER_MILD;
            %tmp.267 = dup %tmp.264;
            %tmp.268 = aputv %tmp.267 2 %tmp.266;
            %tmp.269 = dup %tmp.254;
            %tmp.270 = aputv %tmp.269 %tmp.255 %tmp.268;
            invoke %tmp.192 %tmp.191(%tmp.270);
            lputv %rez_cmp_local_textarea_value.6 %tmp.186;
[ "Rez.mc" 42 ]
            %tmp.271 = newa Array<WatchUi.Drawable> 4;
            %tmp.273 = lgetv %rez_cmp_local_custom_drawable_18912007212065176740.3;
            %tmp.274 = dup %tmp.271;
            %tmp.275 = aputv %tmp.274 0 %tmp.273;
            %tmp.277 = lgetv %rez_cmp_local_textarea_label.4;
            %tmp.278 = dup %tmp.275;
            %tmp.279 = aputv %tmp.278 1 %tmp.277;
            %tmp.281 = lgetv %rez_cmp_local_textarea_subLabel.5;
            %tmp.282 = dup %tmp.279;
            %tmp.283 = aputv %tmp.282 2 %tmp.281;
            %tmp.285 = lgetv %rez_cmp_local_textarea_value.6;
            %tmp.286 = dup %tmp.283;
            %tmp.287 = aputv %tmp.286 3 %tmp.285;
            ret %tmp.287;
        }
        [ @file = "Rez.mc"; @line = 46; ]
        using Toybox.WatchUi;
        [ @file = "Rez.mc"; @line = 47; ]
        using Toybox.WatchUi as :Ui;
        [ @file = "Rez.mc"; @line = 48; ]
        using Toybox.Graphics;
        [ @file = "Rez.mc"; @line = 49; ]
        using Toybox.Graphics as :Gfx;
        [ @file = "Rez.mc"; @line = 51; ]
        function MidTopLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
[ "Rez.mc" 53 ]
            %rez_cmp_local_var_dc_getHeight.1 = local;
            %tmp.2 = lgetv %dc;
            %tmp.3 = getv const %tmp.2 :getHeight;
            %tmp.4 = invoke %tmp.2 %tmp.3();
            lputv %rez_cmp_local_var_dc_getHeight.1 %tmp.4;
[ "Rez.mc" 54 ]
            %rez_cmp_local_var_dc_getWidth.2 = local;
            %tmp.6 = lgetv %dc;
            %tmp.7 = getv const %tmp.6 :getWidth;
            %tmp.8 = invoke %tmp.6 %tmp.7();
            lputv %rez_cmp_local_var_dc_getWidth.2 %tmp.8;
[ "Rez.mc" 56 ]
            %rez_cmp_local_custom_drawable_11046891222544872868.3 = local;
            %tmp.12 = getv ? :Background;
            %tmp.9 = newc %tmp.12;
            %tmp.13 = dup %tmp.9;
            %tmp.14 = getv const %tmp.13 :initialize;
            %tmp.15 = dup %tmp.9;
            invoke %tmp.15 %tmp.14();
            lputv %rez_cmp_local_custom_drawable_11046891222544872868.3 %tmp.9;
[ "Rez.mc" 57 ]
            %rez_cmp_local_textarea_value.4 = local;
            %tmp.18 = getm $.Toybox.WatchUi;
            %tmp.19 = getv %tmp.18 :TextArea;
            %tmp.16 = newc %tmp.19;
            %tmp.20 = dup %tmp.16;
            %tmp.21 = getv const %tmp.20 :initialize;
            %tmp.22 = dup %tmp.16;
            %tmp.23 = newd 9;
            %tmp.24 = :identifier;
            %tmp.25 = "value";
            %tmp.26 = dup %tmp.23;
            %tmp.27 = aputv %tmp.26 %tmp.24 %tmp.25;
            %tmp.28 = :color;
            %tmp.29 = getm $.Toybox.Graphics;
            %tmp.30 = getv %tmp.29 :COLOR_WHITE;
            %tmp.31 = dup %tmp.27;
            %tmp.32 = aputv %tmp.31 %tmp.28 %tmp.30;
            %tmp.33 = :width;
            %tmp.35 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.36 = 100;
            %tmp.37 = 100.0;
            %tmp.38 = div %tmp.36 %tmp.37;
            %tmp.39 = mul %tmp.35 %tmp.38;
            %tmp.40 = dup %tmp.32;
            %tmp.41 = aputv %tmp.40 %tmp.33 %tmp.39;
            %tmp.42 = :locX;
            %tmp.44 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.45 = 2;
            %tmp.46 = div %tmp.44 %tmp.45;
            %tmp.48 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.49 = 100;
            %tmp.50 = 100.0;
            %tmp.51 = div %tmp.49 %tmp.50;
            %tmp.52 = mul %tmp.48 %tmp.51;
            %tmp.53 = 2;
            %tmp.54 = div %tmp.52 %tmp.53;
            %tmp.55 = sub %tmp.46 %tmp.54;
            %tmp.56 = dup %tmp.41;
            %tmp.57 = aputv %tmp.56 %tmp.42 %tmp.55;
            %tmp.58 = :locY;
            %tmp.60 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.61 = 8;
            %tmp.62 = 100.0;
            %tmp.63 = div %tmp.61 %tmp.62;
            %tmp.64 = mul %tmp.60 %tmp.63;
            %tmp.65 = dup %tmp.57;
            %tmp.66 = aputv %tmp.65 %tmp.58 %tmp.64;
            %tmp.67 = :text;
            %tmp.68 = "";
            %tmp.69 = dup %tmp.66;
            %tmp.70 = aputv %tmp.69 %tmp.67 %tmp.68;
            %tmp.71 = :justification;
            %tmp.72 = getm $.Toybox.Graphics;
            %tmp.73 = getv %tmp.72 :TEXT_JUSTIFY_CENTER;
            %tmp.74 = dup %tmp.70;
            %tmp.75 = aputv %tmp.74 %tmp.71 %tmp.73;
            %tmp.76 = :height;
            %tmp.78 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.79 = 100;
            %tmp.80 = 100.0;
            %tmp.81 = div %tmp.79 %tmp.80;
            %tmp.82 = mul %tmp.78 %tmp.81;
            %tmp.83 = dup %tmp.75;
            %tmp.84 = aputv %tmp.83 %tmp.76 %tmp.82;
            %tmp.85 = :font;
            %tmp.86 = newa Array<Graphics.FontType> 2;
            %tmp.87 = getm $.Toybox.Graphics;
            %tmp.88 = getv %tmp.87 :FONT_SYSTEM_NUMBER_MEDIUM;
            %tmp.89 = dup %tmp.86;
            %tmp.90 = aputv %tmp.89 0 %tmp.88;
            %tmp.91 = getm $.Toybox.Graphics;
            %tmp.92 = getv %tmp.91 :FONT_SYSTEM_NUMBER_MILD;
            %tmp.93 = dup %tmp.90;
            %tmp.94 = aputv %tmp.93 1 %tmp.92;
            %tmp.95 = dup %tmp.84;
            %tmp.96 = aputv %tmp.95 %tmp.85 %tmp.94;
            invoke %tmp.22 %tmp.21(%tmp.96);
            lputv %rez_cmp_local_textarea_value.4 %tmp.16;
[ "Rez.mc" 58 ]
            %rez_cmp_local_textarea_subLabel.5 = local;
            %tmp.99 = getm $.Toybox.WatchUi;
            %tmp.100 = getv %tmp.99 :TextArea;
            %tmp.97 = newc %tmp.100;
            %tmp.101 = dup %tmp.97;
            %tmp.102 = getv const %tmp.101 :initialize;
            %tmp.103 = dup %tmp.97;
            %tmp.104 = newd 9;
            %tmp.105 = :identifier;
            %tmp.106 = "subLabel";
            %tmp.107 = dup %tmp.104;
            %tmp.108 = aputv %tmp.107 %tmp.105 %tmp.106;
            %tmp.109 = :color;
            %tmp.110 = getm $.Toybox.Graphics;
            %tmp.111 = getv %tmp.110 :COLOR_WHITE;
            %tmp.112 = dup %tmp.108;
            %tmp.113 = aputv %tmp.112 %tmp.109 %tmp.111;
            %tmp.114 = :width;
            %tmp.116 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.117 = 100;
            %tmp.118 = 100.0;
            %tmp.119 = div %tmp.117 %tmp.118;
            %tmp.120 = mul %tmp.116 %tmp.119;
            %tmp.121 = dup %tmp.113;
            %tmp.122 = aputv %tmp.121 %tmp.114 %tmp.120;
            %tmp.123 = :locX;
            %tmp.125 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.126 = 2;
            %tmp.127 = div %tmp.125 %tmp.126;
            %tmp.129 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.130 = 100;
            %tmp.131 = 100.0;
            %tmp.132 = div %tmp.130 %tmp.131;
            %tmp.133 = mul %tmp.129 %tmp.132;
            %tmp.134 = 2;
            %tmp.135 = div %tmp.133 %tmp.134;
            %tmp.136 = sub %tmp.127 %tmp.135;
            %tmp.137 = dup %tmp.122;
            %tmp.138 = aputv %tmp.137 %tmp.123 %tmp.136;
            %tmp.139 = :locY;
            %tmp.141 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.142 = 52;
            %tmp.143 = 100.0;
            %tmp.144 = div %tmp.142 %tmp.143;
            %tmp.145 = mul %tmp.141 %tmp.144;
            %tmp.146 = dup %tmp.138;
            %tmp.147 = aputv %tmp.146 %tmp.139 %tmp.145;
            %tmp.148 = :text;
            %tmp.149 = "";
            %tmp.150 = dup %tmp.147;
            %tmp.151 = aputv %tmp.150 %tmp.148 %tmp.149;
            %tmp.152 = :justification;
            %tmp.153 = getm $.Toybox.Graphics;
            %tmp.154 = getv %tmp.153 :TEXT_JUSTIFY_CENTER;
            %tmp.155 = dup %tmp.151;
            %tmp.156 = aputv %tmp.155 %tmp.152 %tmp.154;
            %tmp.157 = :height;
            %tmp.159 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.160 = 100;
            %tmp.161 = 100.0;
            %tmp.162 = div %tmp.160 %tmp.161;
            %tmp.163 = mul %tmp.159 %tmp.162;
            %tmp.164 = dup %tmp.156;
            %tmp.165 = aputv %tmp.164 %tmp.157 %tmp.163;
            %tmp.166 = :font;
            %tmp.167 = newa Array<Graphics.FontType> 2;
            %tmp.168 = getm $.Toybox.Graphics;
            %tmp.169 = getv %tmp.168 :FONT_SYSTEM_TINY;
            %tmp.170 = dup %tmp.167;
            %tmp.171 = aputv %tmp.170 0 %tmp.169;
            %tmp.172 = getm $.Toybox.Graphics;
            %tmp.173 = getv %tmp.172 :FONT_SYSTEM_XTINY;
            %tmp.174 = dup %tmp.171;
            %tmp.175 = aputv %tmp.174 1 %tmp.173;
            %tmp.176 = dup %tmp.165;
            %tmp.177 = aputv %tmp.176 %tmp.166 %tmp.175;
            invoke %tmp.103 %tmp.102(%tmp.177);
            lputv %rez_cmp_local_textarea_subLabel.5 %tmp.97;
[ "Rez.mc" 59 ]
            %rez_cmp_local_textarea_label.6 = local;
            %tmp.180 = getm $.Toybox.WatchUi;
            %tmp.181 = getv %tmp.180 :TextArea;
            %tmp.178 = newc %tmp.181;
            %tmp.182 = dup %tmp.178;
            %tmp.183 = getv const %tmp.182 :initialize;
            %tmp.184 = dup %tmp.178;
            %tmp.185 = newd 9;
            %tmp.186 = :identifier;
            %tmp.187 = "label";
            %tmp.188 = dup %tmp.185;
            %tmp.189 = aputv %tmp.188 %tmp.186 %tmp.187;
            %tmp.190 = :color;
            %tmp.191 = getm $.Toybox.Graphics;
            %tmp.192 = getv %tmp.191 :COLOR_WHITE;
            %tmp.193 = dup %tmp.189;
            %tmp.194 = aputv %tmp.193 %tmp.190 %tmp.192;
            %tmp.195 = :width;
            %tmp.197 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.198 = 100;
            %tmp.199 = 100.0;
            %tmp.200 = div %tmp.198 %tmp.199;
            %tmp.201 = mul %tmp.197 %tmp.200;
            %tmp.202 = dup %tmp.194;
            %tmp.203 = aputv %tmp.202 %tmp.195 %tmp.201;
            %tmp.204 = :locX;
            %tmp.206 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.207 = 2;
            %tmp.208 = div %tmp.206 %tmp.207;
            %tmp.210 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.211 = 100;
            %tmp.212 = 100.0;
            %tmp.213 = div %tmp.211 %tmp.212;
            %tmp.214 = mul %tmp.210 %tmp.213;
            %tmp.215 = 2;
            %tmp.216 = div %tmp.214 %tmp.215;
            %tmp.217 = sub %tmp.208 %tmp.216;
            %tmp.218 = dup %tmp.203;
            %tmp.219 = aputv %tmp.218 %tmp.204 %tmp.217;
            %tmp.220 = :locY;
            %tmp.222 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.223 = 70;
            %tmp.224 = 100.0;
            %tmp.225 = div %tmp.223 %tmp.224;
            %tmp.226 = mul %tmp.222 %tmp.225;
            %tmp.227 = dup %tmp.219;
            %tmp.228 = aputv %tmp.227 %tmp.220 %tmp.226;
            %tmp.229 = :text;
            %tmp.230 = "";
            %tmp.231 = dup %tmp.228;
            %tmp.232 = aputv %tmp.231 %tmp.229 %tmp.230;
            %tmp.233 = :justification;
            %tmp.234 = getm $.Toybox.Graphics;
            %tmp.235 = getv %tmp.234 :TEXT_JUSTIFY_CENTER;
            %tmp.236 = dup %tmp.232;
            %tmp.237 = aputv %tmp.236 %tmp.233 %tmp.235;
            %tmp.238 = :height;
            %tmp.240 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.241 = 100;
            %tmp.242 = 100.0;
            %tmp.243 = div %tmp.241 %tmp.242;
            %tmp.244 = mul %tmp.240 %tmp.243;
            %tmp.245 = dup %tmp.237;
            %tmp.246 = aputv %tmp.245 %tmp.238 %tmp.244;
            %tmp.247 = :font;
            %tmp.248 = newa Array<Graphics.FontType> 3;
            %tmp.249 = getm $.Toybox.Graphics;
            %tmp.250 = getv %tmp.249 :FONT_SYSTEM_MEDIUM;
            %tmp.251 = dup %tmp.248;
            %tmp.252 = aputv %tmp.251 0 %tmp.250;
            %tmp.253 = getm $.Toybox.Graphics;
            %tmp.254 = getv %tmp.253 :FONT_SYSTEM_SMALL;
            %tmp.255 = dup %tmp.252;
            %tmp.256 = aputv %tmp.255 1 %tmp.254;
            %tmp.257 = getm $.Toybox.Graphics;
            %tmp.258 = getv %tmp.257 :FONT_SYSTEM_TINY;
            %tmp.259 = dup %tmp.256;
            %tmp.260 = aputv %tmp.259 2 %tmp.258;
            %tmp.261 = dup %tmp.246;
            %tmp.262 = aputv %tmp.261 %tmp.247 %tmp.260;
            invoke %tmp.184 %tmp.183(%tmp.262);
            lputv %rez_cmp_local_textarea_label.6 %tmp.178;
[ "Rez.mc" 61 ]
            %tmp.263 = newa Array<WatchUi.Drawable> 4;
            %tmp.265 = lgetv %rez_cmp_local_custom_drawable_11046891222544872868.3;
            %tmp.266 = dup %tmp.263;
            %tmp.267 = aputv %tmp.266 0 %tmp.265;
            %tmp.269 = lgetv %rez_cmp_local_textarea_value.4;
            %tmp.270 = dup %tmp.267;
            %tmp.271 = aputv %tmp.270 1 %tmp.269;
            %tmp.273 = lgetv %rez_cmp_local_textarea_subLabel.5;
            %tmp.274 = dup %tmp.271;
            %tmp.275 = aputv %tmp.274 2 %tmp.273;
            %tmp.277 = lgetv %rez_cmp_local_textarea_label.6;
            %tmp.278 = dup %tmp.275;
            %tmp.279 = aputv %tmp.278 3 %tmp.277;
            ret %tmp.279;
        }
        [ @file = "Rez.mc"; @line = 65; ]
        using Toybox.WatchUi;
        [ @file = "Rez.mc"; @line = 66; ]
        using Toybox.WatchUi as :Ui;
        [ @file = "Rez.mc"; @line = 67; ]
        using Toybox.Graphics;
        [ @file = "Rez.mc"; @line = 68; ]
        using Toybox.Graphics as :Gfx;
        [ @file = "Rez.mc"; @line = 70; ]
        function MidTopSmallLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
[ "Rez.mc" 72 ]
            %rez_cmp_local_var_dc_getHeight.1 = local;
            %tmp.2 = lgetv %dc;
            %tmp.3 = getv const %tmp.2 :getHeight;
            %tmp.4 = invoke %tmp.2 %tmp.3();
            lputv %rez_cmp_local_var_dc_getHeight.1 %tmp.4;
[ "Rez.mc" 73 ]
            %rez_cmp_local_var_dc_getWidth.2 = local;
            %tmp.6 = lgetv %dc;
            %tmp.7 = getv const %tmp.6 :getWidth;
            %tmp.8 = invoke %tmp.6 %tmp.7();
            lputv %rez_cmp_local_var_dc_getWidth.2 %tmp.8;
[ "Rez.mc" 75 ]
            %rez_cmp_local_custom_drawable_82778200568084477911.3 = local;
            %tmp.12 = getv ? :Background;
            %tmp.9 = newc %tmp.12;
            %tmp.13 = dup %tmp.9;
            %tmp.14 = getv const %tmp.13 :initialize;
            %tmp.15 = dup %tmp.9;
            invoke %tmp.15 %tmp.14();
            lputv %rez_cmp_local_custom_drawable_82778200568084477911.3 %tmp.9;
[ "Rez.mc" 76 ]
            %rez_cmp_local_textarea_value.4 = local;
            %tmp.18 = getm $.Toybox.WatchUi;
            %tmp.19 = getv %tmp.18 :TextArea;
            %tmp.16 = newc %tmp.19;
            %tmp.20 = dup %tmp.16;
            %tmp.21 = getv const %tmp.20 :initialize;
            %tmp.22 = dup %tmp.16;
            %tmp.23 = newd 9;
            %tmp.24 = :identifier;
            %tmp.25 = "value";
            %tmp.26 = dup %tmp.23;
            %tmp.27 = aputv %tmp.26 %tmp.24 %tmp.25;
            %tmp.28 = :color;
            %tmp.29 = getm $.Toybox.Graphics;
            %tmp.30 = getv %tmp.29 :COLOR_WHITE;
            %tmp.31 = dup %tmp.27;
            %tmp.32 = aputv %tmp.31 %tmp.28 %tmp.30;
            %tmp.33 = :width;
            %tmp.35 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.36 = 100;
            %tmp.37 = 100.0;
            %tmp.38 = div %tmp.36 %tmp.37;
            %tmp.39 = mul %tmp.35 %tmp.38;
            %tmp.40 = dup %tmp.32;
            %tmp.41 = aputv %tmp.40 %tmp.33 %tmp.39;
            %tmp.42 = :locX;
            %tmp.44 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.45 = 2;
            %tmp.46 = div %tmp.44 %tmp.45;
            %tmp.48 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.49 = 100;
            %tmp.50 = 100.0;
            %tmp.51 = div %tmp.49 %tmp.50;
            %tmp.52 = mul %tmp.48 %tmp.51;
            %tmp.53 = 2;
            %tmp.54 = div %tmp.52 %tmp.53;
            %tmp.55 = sub %tmp.46 %tmp.54;
            %tmp.56 = dup %tmp.41;
            %tmp.57 = aputv %tmp.56 %tmp.42 %tmp.55;
            %tmp.58 = :locY;
            %tmp.59 = 0;
            %tmp.60 = dup %tmp.57;
            %tmp.61 = aputv %tmp.60 %tmp.58 %tmp.59;
            %tmp.62 = :text;
            %tmp.63 = "";
            %tmp.64 = dup %tmp.61;
            %tmp.65 = aputv %tmp.64 %tmp.62 %tmp.63;
            %tmp.66 = :justification;
            %tmp.67 = getm $.Toybox.Graphics;
            %tmp.68 = getv %tmp.67 :TEXT_JUSTIFY_CENTER;
            %tmp.69 = dup %tmp.65;
            %tmp.70 = aputv %tmp.69 %tmp.66 %tmp.68;
            %tmp.71 = :height;
            %tmp.73 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.74 = 100;
            %tmp.75 = 100.0;
            %tmp.76 = div %tmp.74 %tmp.75;
            %tmp.77 = mul %tmp.73 %tmp.76;
            %tmp.78 = dup %tmp.70;
            %tmp.79 = aputv %tmp.78 %tmp.71 %tmp.77;
            %tmp.80 = :font;
            %tmp.81 = newa Array<Graphics.FontType> 1;
            %tmp.82 = getm $.Toybox.Graphics;
            %tmp.83 = getv %tmp.82 :FONT_SYSTEM_NUMBER_MILD;
            %tmp.84 = dup %tmp.81;
            %tmp.85 = aputv %tmp.84 0 %tmp.83;
            %tmp.86 = dup %tmp.79;
            %tmp.87 = aputv %tmp.86 %tmp.80 %tmp.85;
            invoke %tmp.22 %tmp.21(%tmp.87);
            lputv %rez_cmp_local_textarea_value.4 %tmp.16;
[ "Rez.mc" 77 ]
            %rez_cmp_local_textarea_subLabel.5 = local;
            %tmp.90 = getm $.Toybox.WatchUi;
            %tmp.91 = getv %tmp.90 :TextArea;
            %tmp.88 = newc %tmp.91;
            %tmp.92 = dup %tmp.88;
            %tmp.93 = getv const %tmp.92 :initialize;
            %tmp.94 = dup %tmp.88;
            %tmp.95 = newd 9;
            %tmp.96 = :identifier;
            %tmp.97 = "subLabel";
            %tmp.98 = dup %tmp.95;
            %tmp.99 = aputv %tmp.98 %tmp.96 %tmp.97;
            %tmp.100 = :color;
            %tmp.101 = getm $.Toybox.Graphics;
            %tmp.102 = getv %tmp.101 :COLOR_WHITE;
            %tmp.103 = dup %tmp.99;
            %tmp.104 = aputv %tmp.103 %tmp.100 %tmp.102;
            %tmp.105 = :width;
            %tmp.107 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.108 = 100;
            %tmp.109 = 100.0;
            %tmp.110 = div %tmp.108 %tmp.109;
            %tmp.111 = mul %tmp.107 %tmp.110;
            %tmp.112 = dup %tmp.104;
            %tmp.113 = aputv %tmp.112 %tmp.105 %tmp.111;
            %tmp.114 = :locX;
            %tmp.116 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.117 = 2;
            %tmp.118 = div %tmp.116 %tmp.117;
            %tmp.120 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.121 = 100;
            %tmp.122 = 100.0;
            %tmp.123 = div %tmp.121 %tmp.122;
            %tmp.124 = mul %tmp.120 %tmp.123;
            %tmp.125 = 2;
            %tmp.126 = div %tmp.124 %tmp.125;
            %tmp.127 = sub %tmp.118 %tmp.126;
            %tmp.128 = dup %tmp.113;
            %tmp.129 = aputv %tmp.128 %tmp.114 %tmp.127;
            %tmp.130 = :locY;
            %tmp.132 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.133 = 55;
            %tmp.134 = 100.0;
            %tmp.135 = div %tmp.133 %tmp.134;
            %tmp.136 = mul %tmp.132 %tmp.135;
            %tmp.137 = dup %tmp.129;
            %tmp.138 = aputv %tmp.137 %tmp.130 %tmp.136;
            %tmp.139 = :text;
            %tmp.140 = "";
            %tmp.141 = dup %tmp.138;
            %tmp.142 = aputv %tmp.141 %tmp.139 %tmp.140;
            %tmp.143 = :justification;
            %tmp.144 = getm $.Toybox.Graphics;
            %tmp.145 = getv %tmp.144 :TEXT_JUSTIFY_CENTER;
            %tmp.146 = dup %tmp.142;
            %tmp.147 = aputv %tmp.146 %tmp.143 %tmp.145;
            %tmp.148 = :height;
            %tmp.150 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.151 = 100;
            %tmp.152 = 100.0;
            %tmp.153 = div %tmp.151 %tmp.152;
            %tmp.154 = mul %tmp.150 %tmp.153;
            %tmp.155 = dup %tmp.147;
            %tmp.156 = aputv %tmp.155 %tmp.148 %tmp.154;
            %tmp.157 = :font;
            %tmp.158 = newa Array<Graphics.FontType> 1;
            %tmp.159 = getm $.Toybox.Graphics;
            %tmp.160 = getv %tmp.159 :FONT_SYSTEM_XTINY;
            %tmp.161 = dup %tmp.158;
            %tmp.162 = aputv %tmp.161 0 %tmp.160;
            %tmp.163 = dup %tmp.156;
            %tmp.164 = aputv %tmp.163 %tmp.157 %tmp.162;
            invoke %tmp.94 %tmp.93(%tmp.164);
            lputv %rez_cmp_local_textarea_subLabel.5 %tmp.88;
[ "Rez.mc" 78 ]
            %rez_cmp_local_textarea_label.6 = local;
            %tmp.167 = getm $.Toybox.WatchUi;
            %tmp.168 = getv %tmp.167 :TextArea;
            %tmp.165 = newc %tmp.168;
            %tmp.169 = dup %tmp.165;
            %tmp.170 = getv const %tmp.169 :initialize;
            %tmp.171 = dup %tmp.165;
            %tmp.172 = newd 9;
            %tmp.173 = :identifier;
            %tmp.174 = "label";
            %tmp.175 = dup %tmp.172;
            %tmp.176 = aputv %tmp.175 %tmp.173 %tmp.174;
            %tmp.177 = :color;
            %tmp.178 = getm $.Toybox.Graphics;
            %tmp.179 = getv %tmp.178 :COLOR_WHITE;
            %tmp.180 = dup %tmp.176;
            %tmp.181 = aputv %tmp.180 %tmp.177 %tmp.179;
            %tmp.182 = :width;
            %tmp.184 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.185 = 100;
            %tmp.186 = 100.0;
            %tmp.187 = div %tmp.185 %tmp.186;
            %tmp.188 = mul %tmp.184 %tmp.187;
            %tmp.189 = dup %tmp.181;
            %tmp.190 = aputv %tmp.189 %tmp.182 %tmp.188;
            %tmp.191 = :locX;
            %tmp.193 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.194 = 2;
            %tmp.195 = div %tmp.193 %tmp.194;
            %tmp.197 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.198 = 100;
            %tmp.199 = 100.0;
            %tmp.200 = div %tmp.198 %tmp.199;
            %tmp.201 = mul %tmp.197 %tmp.200;
            %tmp.202 = 2;
            %tmp.203 = div %tmp.201 %tmp.202;
            %tmp.204 = sub %tmp.195 %tmp.203;
            %tmp.205 = dup %tmp.190;
            %tmp.206 = aputv %tmp.205 %tmp.191 %tmp.204;
            %tmp.207 = :locY;
            %tmp.209 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.210 = 68;
            %tmp.211 = 100.0;
            %tmp.212 = div %tmp.210 %tmp.211;
            %tmp.213 = mul %tmp.209 %tmp.212;
            %tmp.214 = dup %tmp.206;
            %tmp.215 = aputv %tmp.214 %tmp.207 %tmp.213;
            %tmp.216 = :text;
            %tmp.217 = "";
            %tmp.218 = dup %tmp.215;
            %tmp.219 = aputv %tmp.218 %tmp.216 %tmp.217;
            %tmp.220 = :justification;
            %tmp.221 = getm $.Toybox.Graphics;
            %tmp.222 = getv %tmp.221 :TEXT_JUSTIFY_CENTER;
            %tmp.223 = dup %tmp.219;
            %tmp.224 = aputv %tmp.223 %tmp.220 %tmp.222;
            %tmp.225 = :height;
            %tmp.227 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.228 = 100;
            %tmp.229 = 100.0;
            %tmp.230 = div %tmp.228 %tmp.229;
            %tmp.231 = mul %tmp.227 %tmp.230;
            %tmp.232 = dup %tmp.224;
            %tmp.233 = aputv %tmp.232 %tmp.225 %tmp.231;
            %tmp.234 = :font;
            %tmp.235 = newa Array<Graphics.FontType> 2;
            %tmp.236 = getm $.Toybox.Graphics;
            %tmp.237 = getv %tmp.236 :FONT_SYSTEM_TINY;
            %tmp.238 = dup %tmp.235;
            %tmp.239 = aputv %tmp.238 0 %tmp.237;
            %tmp.240 = getm $.Toybox.Graphics;
            %tmp.241 = getv %tmp.240 :FONT_SYSTEM_XTINY;
            %tmp.242 = dup %tmp.239;
            %tmp.243 = aputv %tmp.242 1 %tmp.241;
            %tmp.244 = dup %tmp.233;
            %tmp.245 = aputv %tmp.244 %tmp.234 %tmp.243;
            invoke %tmp.171 %tmp.170(%tmp.245);
            lputv %rez_cmp_local_textarea_label.6 %tmp.165;
[ "Rez.mc" 80 ]
            %tmp.246 = newa Array<WatchUi.Drawable> 4;
            %tmp.248 = lgetv %rez_cmp_local_custom_drawable_82778200568084477911.3;
            %tmp.249 = dup %tmp.246;
            %tmp.250 = aputv %tmp.249 0 %tmp.248;
            %tmp.252 = lgetv %rez_cmp_local_textarea_value.4;
            %tmp.253 = dup %tmp.250;
            %tmp.254 = aputv %tmp.253 1 %tmp.252;
            %tmp.256 = lgetv %rez_cmp_local_textarea_subLabel.5;
            %tmp.257 = dup %tmp.254;
            %tmp.258 = aputv %tmp.257 2 %tmp.256;
            %tmp.260 = lgetv %rez_cmp_local_textarea_label.6;
            %tmp.261 = dup %tmp.258;
            %tmp.262 = aputv %tmp.261 3 %tmp.260;
            ret %tmp.262;
        }
        [ @file = "Rez.mc"; @line = 84; ]
        using Toybox.WatchUi;
        [ @file = "Rez.mc"; @line = 85; ]
        using Toybox.WatchUi as :Ui;
        [ @file = "Rez.mc"; @line = 86; ]
        using Toybox.Graphics;
        [ @file = "Rez.mc"; @line = 87; ]
        using Toybox.Graphics as :Gfx;
        [ @file = "Rez.mc"; @line = 89; ]
        function MidBottomLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
[ "Rez.mc" 91 ]
            %rez_cmp_local_var_dc_getHeight.1 = local;
            %tmp.2 = lgetv %dc;
            %tmp.3 = getv const %tmp.2 :getHeight;
            %tmp.4 = invoke %tmp.2 %tmp.3();
            lputv %rez_cmp_local_var_dc_getHeight.1 %tmp.4;
[ "Rez.mc" 92 ]
            %rez_cmp_local_var_dc_getWidth.2 = local;
            %tmp.6 = lgetv %dc;
            %tmp.7 = getv const %tmp.6 :getWidth;
            %tmp.8 = invoke %tmp.6 %tmp.7();
            lputv %rez_cmp_local_var_dc_getWidth.2 %tmp.8;
[ "Rez.mc" 94 ]
            %rez_cmp_local_custom_drawable_83966964226801311510.3 = local;
            %tmp.12 = getv ? :Background;
            %tmp.9 = newc %tmp.12;
            %tmp.13 = dup %tmp.9;
            %tmp.14 = getv const %tmp.13 :initialize;
            %tmp.15 = dup %tmp.9;
            invoke %tmp.15 %tmp.14();
            lputv %rez_cmp_local_custom_drawable_83966964226801311510.3 %tmp.9;
[ "Rez.mc" 95 ]
            %rez_cmp_local_textarea_label.4 = local;
            %tmp.18 = getm $.Toybox.WatchUi;
            %tmp.19 = getv %tmp.18 :TextArea;
            %tmp.16 = newc %tmp.19;
            %tmp.20 = dup %tmp.16;
            %tmp.21 = getv const %tmp.20 :initialize;
            %tmp.22 = dup %tmp.16;
            %tmp.23 = newd 9;
            %tmp.24 = :identifier;
            %tmp.25 = "label";
            %tmp.26 = dup %tmp.23;
            %tmp.27 = aputv %tmp.26 %tmp.24 %tmp.25;
            %tmp.28 = :color;
            %tmp.29 = getm $.Toybox.Graphics;
            %tmp.30 = getv %tmp.29 :COLOR_WHITE;
            %tmp.31 = dup %tmp.27;
            %tmp.32 = aputv %tmp.31 %tmp.28 %tmp.30;
            %tmp.33 = :width;
            %tmp.35 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.36 = 100;
            %tmp.37 = 100.0;
            %tmp.38 = div %tmp.36 %tmp.37;
            %tmp.39 = mul %tmp.35 %tmp.38;
            %tmp.40 = dup %tmp.32;
            %tmp.41 = aputv %tmp.40 %tmp.33 %tmp.39;
            %tmp.42 = :locX;
            %tmp.44 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.45 = 2;
            %tmp.46 = div %tmp.44 %tmp.45;
            %tmp.48 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.49 = 100;
            %tmp.50 = 100.0;
            %tmp.51 = div %tmp.49 %tmp.50;
            %tmp.52 = mul %tmp.48 %tmp.51;
            %tmp.53 = 2;
            %tmp.54 = div %tmp.52 %tmp.53;
            %tmp.55 = sub %tmp.46 %tmp.54;
            %tmp.56 = dup %tmp.41;
            %tmp.57 = aputv %tmp.56 %tmp.42 %tmp.55;
            %tmp.58 = :locY;
            %tmp.59 = 0;
            %tmp.60 = dup %tmp.57;
            %tmp.61 = aputv %tmp.60 %tmp.58 %tmp.59;
            %tmp.62 = :text;
            %tmp.63 = "";
            %tmp.64 = dup %tmp.61;
            %tmp.65 = aputv %tmp.64 %tmp.62 %tmp.63;
            %tmp.66 = :justification;
            %tmp.67 = getm $.Toybox.Graphics;
            %tmp.68 = getv %tmp.67 :TEXT_JUSTIFY_CENTER;
            %tmp.69 = dup %tmp.65;
            %tmp.70 = aputv %tmp.69 %tmp.66 %tmp.68;
            %tmp.71 = :height;
            %tmp.73 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.74 = 100;
            %tmp.75 = 100.0;
            %tmp.76 = div %tmp.74 %tmp.75;
            %tmp.77 = mul %tmp.73 %tmp.76;
            %tmp.78 = dup %tmp.70;
            %tmp.79 = aputv %tmp.78 %tmp.71 %tmp.77;
            %tmp.80 = :font;
            %tmp.81 = newa Array<Graphics.FontType> 3;
            %tmp.82 = getm $.Toybox.Graphics;
            %tmp.83 = getv %tmp.82 :FONT_SYSTEM_MEDIUM;
            %tmp.84 = dup %tmp.81;
            %tmp.85 = aputv %tmp.84 0 %tmp.83;
            %tmp.86 = getm $.Toybox.Graphics;
            %tmp.87 = getv %tmp.86 :FONT_SYSTEM_SMALL;
            %tmp.88 = dup %tmp.85;
            %tmp.89 = aputv %tmp.88 1 %tmp.87;
            %tmp.90 = getm $.Toybox.Graphics;
            %tmp.91 = getv %tmp.90 :FONT_SYSTEM_TINY;
            %tmp.92 = dup %tmp.89;
            %tmp.93 = aputv %tmp.92 2 %tmp.91;
            %tmp.94 = dup %tmp.79;
            %tmp.95 = aputv %tmp.94 %tmp.80 %tmp.93;
            invoke %tmp.22 %tmp.21(%tmp.95);
            lputv %rez_cmp_local_textarea_label.4 %tmp.16;
[ "Rez.mc" 96 ]
            %rez_cmp_local_textarea_subLabel.5 = local;
            %tmp.98 = getm $.Toybox.WatchUi;
            %tmp.99 = getv %tmp.98 :TextArea;
            %tmp.96 = newc %tmp.99;
            %tmp.100 = dup %tmp.96;
            %tmp.101 = getv const %tmp.100 :initialize;
            %tmp.102 = dup %tmp.96;
            %tmp.103 = newd 9;
            %tmp.104 = :identifier;
            %tmp.105 = "subLabel";
            %tmp.106 = dup %tmp.103;
            %tmp.107 = aputv %tmp.106 %tmp.104 %tmp.105;
            %tmp.108 = :color;
            %tmp.109 = getm $.Toybox.Graphics;
            %tmp.110 = getv %tmp.109 :COLOR_WHITE;
            %tmp.111 = dup %tmp.107;
            %tmp.112 = aputv %tmp.111 %tmp.108 %tmp.110;
            %tmp.113 = :width;
            %tmp.115 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.116 = 100;
            %tmp.117 = 100.0;
            %tmp.118 = div %tmp.116 %tmp.117;
            %tmp.119 = mul %tmp.115 %tmp.118;
            %tmp.120 = dup %tmp.112;
            %tmp.121 = aputv %tmp.120 %tmp.113 %tmp.119;
            %tmp.122 = :locX;
            %tmp.124 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.125 = 2;
            %tmp.126 = div %tmp.124 %tmp.125;
            %tmp.128 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.129 = 100;
            %tmp.130 = 100.0;
            %tmp.131 = div %tmp.129 %tmp.130;
            %tmp.132 = mul %tmp.128 %tmp.131;
            %tmp.133 = 2;
            %tmp.134 = div %tmp.132 %tmp.133;
            %tmp.135 = sub %tmp.126 %tmp.134;
            %tmp.136 = dup %tmp.121;
            %tmp.137 = aputv %tmp.136 %tmp.122 %tmp.135;
            %tmp.138 = :locY;
            %tmp.140 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.141 = 27;
            %tmp.142 = 100.0;
            %tmp.143 = div %tmp.141 %tmp.142;
            %tmp.144 = mul %tmp.140 %tmp.143;
            %tmp.145 = dup %tmp.137;
            %tmp.146 = aputv %tmp.145 %tmp.138 %tmp.144;
            %tmp.147 = :text;
            %tmp.148 = "";
            %tmp.149 = dup %tmp.146;
            %tmp.150 = aputv %tmp.149 %tmp.147 %tmp.148;
            %tmp.151 = :justification;
            %tmp.152 = getm $.Toybox.Graphics;
            %tmp.153 = getv %tmp.152 :TEXT_JUSTIFY_CENTER;
            %tmp.154 = dup %tmp.150;
            %tmp.155 = aputv %tmp.154 %tmp.151 %tmp.153;
            %tmp.156 = :height;
            %tmp.158 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.159 = 100;
            %tmp.160 = 100.0;
            %tmp.161 = div %tmp.159 %tmp.160;
            %tmp.162 = mul %tmp.158 %tmp.161;
            %tmp.163 = dup %tmp.155;
            %tmp.164 = aputv %tmp.163 %tmp.156 %tmp.162;
            %tmp.165 = :font;
            %tmp.166 = newa Array<Graphics.FontType> 2;
            %tmp.167 = getm $.Toybox.Graphics;
            %tmp.168 = getv %tmp.167 :FONT_SYSTEM_TINY;
            %tmp.169 = dup %tmp.166;
            %tmp.170 = aputv %tmp.169 0 %tmp.168;
            %tmp.171 = getm $.Toybox.Graphics;
            %tmp.172 = getv %tmp.171 :FONT_SYSTEM_XTINY;
            %tmp.173 = dup %tmp.170;
            %tmp.174 = aputv %tmp.173 1 %tmp.172;
            %tmp.175 = dup %tmp.164;
            %tmp.176 = aputv %tmp.175 %tmp.165 %tmp.174;
            invoke %tmp.102 %tmp.101(%tmp.176);
            lputv %rez_cmp_local_textarea_subLabel.5 %tmp.96;
[ "Rez.mc" 97 ]
            %rez_cmp_local_textarea_value.6 = local;
            %tmp.179 = getm $.Toybox.WatchUi;
            %tmp.180 = getv %tmp.179 :TextArea;
            %tmp.177 = newc %tmp.180;
            %tmp.181 = dup %tmp.177;
            %tmp.182 = getv const %tmp.181 :initialize;
            %tmp.183 = dup %tmp.177;
            %tmp.184 = newd 9;
            %tmp.185 = :identifier;
            %tmp.186 = "value";
            %tmp.187 = dup %tmp.184;
            %tmp.188 = aputv %tmp.187 %tmp.185 %tmp.186;
            %tmp.189 = :color;
            %tmp.190 = getm $.Toybox.Graphics;
            %tmp.191 = getv %tmp.190 :COLOR_WHITE;
            %tmp.192 = dup %tmp.188;
            %tmp.193 = aputv %tmp.192 %tmp.189 %tmp.191;
            %tmp.194 = :width;
            %tmp.196 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.197 = 100;
            %tmp.198 = 100.0;
            %tmp.199 = div %tmp.197 %tmp.198;
            %tmp.200 = mul %tmp.196 %tmp.199;
            %tmp.201 = dup %tmp.193;
            %tmp.202 = aputv %tmp.201 %tmp.194 %tmp.200;
            %tmp.203 = :locX;
            %tmp.205 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.206 = 2;
            %tmp.207 = div %tmp.205 %tmp.206;
            %tmp.209 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.210 = 100;
            %tmp.211 = 100.0;
            %tmp.212 = div %tmp.210 %tmp.211;
            %tmp.213 = mul %tmp.209 %tmp.212;
            %tmp.214 = 2;
            %tmp.215 = div %tmp.213 %tmp.214;
            %tmp.216 = sub %tmp.207 %tmp.215;
            %tmp.217 = dup %tmp.202;
            %tmp.218 = aputv %tmp.217 %tmp.203 %tmp.216;
            %tmp.219 = :locY;
            %tmp.221 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.222 = 40;
            %tmp.223 = 100.0;
            %tmp.224 = div %tmp.222 %tmp.223;
            %tmp.225 = mul %tmp.221 %tmp.224;
            %tmp.226 = dup %tmp.218;
            %tmp.227 = aputv %tmp.226 %tmp.219 %tmp.225;
            %tmp.228 = :text;
            %tmp.229 = "";
            %tmp.230 = dup %tmp.227;
            %tmp.231 = aputv %tmp.230 %tmp.228 %tmp.229;
            %tmp.232 = :justification;
            %tmp.233 = getm $.Toybox.Graphics;
            %tmp.234 = getv %tmp.233 :TEXT_JUSTIFY_CENTER;
            %tmp.235 = dup %tmp.231;
            %tmp.236 = aputv %tmp.235 %tmp.232 %tmp.234;
            %tmp.237 = :height;
            %tmp.239 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.240 = 100;
            %tmp.241 = 100.0;
            %tmp.242 = div %tmp.240 %tmp.241;
            %tmp.243 = mul %tmp.239 %tmp.242;
            %tmp.244 = dup %tmp.236;
            %tmp.245 = aputv %tmp.244 %tmp.237 %tmp.243;
            %tmp.246 = :font;
            %tmp.247 = newa Array<Graphics.FontType> 2;
            %tmp.248 = getm $.Toybox.Graphics;
            %tmp.249 = getv %tmp.248 :FONT_SYSTEM_NUMBER_MEDIUM;
            %tmp.250 = dup %tmp.247;
            %tmp.251 = aputv %tmp.250 0 %tmp.249;
            %tmp.252 = getm $.Toybox.Graphics;
            %tmp.253 = getv %tmp.252 :FONT_SYSTEM_NUMBER_MILD;
            %tmp.254 = dup %tmp.251;
            %tmp.255 = aputv %tmp.254 1 %tmp.253;
            %tmp.256 = dup %tmp.245;
            %tmp.257 = aputv %tmp.256 %tmp.246 %tmp.255;
            invoke %tmp.183 %tmp.182(%tmp.257);
            lputv %rez_cmp_local_textarea_value.6 %tmp.177;
[ "Rez.mc" 99 ]
            %tmp.258 = newa Array<WatchUi.Drawable> 4;
            %tmp.260 = lgetv %rez_cmp_local_custom_drawable_83966964226801311510.3;
            %tmp.261 = dup %tmp.258;
            %tmp.262 = aputv %tmp.261 0 %tmp.260;
            %tmp.264 = lgetv %rez_cmp_local_textarea_label.4;
            %tmp.265 = dup %tmp.262;
            %tmp.266 = aputv %tmp.265 1 %tmp.264;
            %tmp.268 = lgetv %rez_cmp_local_textarea_subLabel.5;
            %tmp.269 = dup %tmp.266;
            %tmp.270 = aputv %tmp.269 2 %tmp.268;
            %tmp.272 = lgetv %rez_cmp_local_textarea_value.6;
            %tmp.273 = dup %tmp.270;
            %tmp.274 = aputv %tmp.273 3 %tmp.272;
            ret %tmp.274;
        }
        [ @file = "Rez.mc"; @line = 103; ]
        using Toybox.WatchUi;
        [ @file = "Rez.mc"; @line = 104; ]
        using Toybox.WatchUi as :Ui;
        [ @file = "Rez.mc"; @line = 105; ]
        using Toybox.Graphics;
        [ @file = "Rez.mc"; @line = 106; ]
        using Toybox.Graphics as :Gfx;
        [ @file = "Rez.mc"; @line = 108; ]
        function MidBottomSmallLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
[ "Rez.mc" 110 ]
            %rez_cmp_local_var_dc_getHeight.1 = local;
            %tmp.2 = lgetv %dc;
            %tmp.3 = getv const %tmp.2 :getHeight;
            %tmp.4 = invoke %tmp.2 %tmp.3();
            lputv %rez_cmp_local_var_dc_getHeight.1 %tmp.4;
[ "Rez.mc" 111 ]
            %rez_cmp_local_var_dc_getWidth.2 = local;
            %tmp.6 = lgetv %dc;
            %tmp.7 = getv const %tmp.6 :getWidth;
            %tmp.8 = invoke %tmp.6 %tmp.7();
            lputv %rez_cmp_local_var_dc_getWidth.2 %tmp.8;
[ "Rez.mc" 113 ]
            %rez_cmp_local_custom_drawable_20800209421881119293.3 = local;
            %tmp.12 = getv ? :Background;
            %tmp.9 = newc %tmp.12;
            %tmp.13 = dup %tmp.9;
            %tmp.14 = getv const %tmp.13 :initialize;
            %tmp.15 = dup %tmp.9;
            invoke %tmp.15 %tmp.14();
            lputv %rez_cmp_local_custom_drawable_20800209421881119293.3 %tmp.9;
[ "Rez.mc" 114 ]
            %rez_cmp_local_textarea_label.4 = local;
            %tmp.18 = getm $.Toybox.WatchUi;
            %tmp.19 = getv %tmp.18 :TextArea;
            %tmp.16 = newc %tmp.19;
            %tmp.20 = dup %tmp.16;
            %tmp.21 = getv const %tmp.20 :initialize;
            %tmp.22 = dup %tmp.16;
            %tmp.23 = newd 9;
            %tmp.24 = :identifier;
            %tmp.25 = "label";
            %tmp.26 = dup %tmp.23;
            %tmp.27 = aputv %tmp.26 %tmp.24 %tmp.25;
            %tmp.28 = :color;
            %tmp.29 = getm $.Toybox.Graphics;
            %tmp.30 = getv %tmp.29 :COLOR_WHITE;
            %tmp.31 = dup %tmp.27;
            %tmp.32 = aputv %tmp.31 %tmp.28 %tmp.30;
            %tmp.33 = :width;
            %tmp.35 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.36 = 100;
            %tmp.37 = 100.0;
            %tmp.38 = div %tmp.36 %tmp.37;
            %tmp.39 = mul %tmp.35 %tmp.38;
            %tmp.40 = dup %tmp.32;
            %tmp.41 = aputv %tmp.40 %tmp.33 %tmp.39;
            %tmp.42 = :locX;
            %tmp.44 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.45 = 2;
            %tmp.46 = div %tmp.44 %tmp.45;
            %tmp.48 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.49 = 100;
            %tmp.50 = 100.0;
            %tmp.51 = div %tmp.49 %tmp.50;
            %tmp.52 = mul %tmp.48 %tmp.51;
            %tmp.53 = 2;
            %tmp.54 = div %tmp.52 %tmp.53;
            %tmp.55 = sub %tmp.46 %tmp.54;
            %tmp.56 = dup %tmp.41;
            %tmp.57 = aputv %tmp.56 %tmp.42 %tmp.55;
            %tmp.58 = :locY;
            %tmp.59 = 0;
            %tmp.60 = dup %tmp.57;
            %tmp.61 = aputv %tmp.60 %tmp.58 %tmp.59;
            %tmp.62 = :text;
            %tmp.63 = "";
            %tmp.64 = dup %tmp.61;
            %tmp.65 = aputv %tmp.64 %tmp.62 %tmp.63;
            %tmp.66 = :justification;
            %tmp.67 = getm $.Toybox.Graphics;
            %tmp.68 = getv %tmp.67 :TEXT_JUSTIFY_CENTER;
            %tmp.69 = dup %tmp.65;
            %tmp.70 = aputv %tmp.69 %tmp.66 %tmp.68;
            %tmp.71 = :height;
            %tmp.73 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.74 = 100;
            %tmp.75 = 100.0;
            %tmp.76 = div %tmp.74 %tmp.75;
            %tmp.77 = mul %tmp.73 %tmp.76;
            %tmp.78 = dup %tmp.70;
            %tmp.79 = aputv %tmp.78 %tmp.71 %tmp.77;
            %tmp.80 = :font;
            %tmp.81 = newa Array<Graphics.FontType> 2;
            %tmp.82 = getm $.Toybox.Graphics;
            %tmp.83 = getv %tmp.82 :FONT_SYSTEM_TINY;
            %tmp.84 = dup %tmp.81;
            %tmp.85 = aputv %tmp.84 0 %tmp.83;
            %tmp.86 = getm $.Toybox.Graphics;
            %tmp.87 = getv %tmp.86 :FONT_SYSTEM_XTINY;
            %tmp.88 = dup %tmp.85;
            %tmp.89 = aputv %tmp.88 1 %tmp.87;
            %tmp.90 = dup %tmp.79;
            %tmp.91 = aputv %tmp.90 %tmp.80 %tmp.89;
            invoke %tmp.22 %tmp.21(%tmp.91);
            lputv %rez_cmp_local_textarea_label.4 %tmp.16;
[ "Rez.mc" 115 ]
            %rez_cmp_local_textarea_subLabel.5 = local;
            %tmp.94 = getm $.Toybox.WatchUi;
            %tmp.95 = getv %tmp.94 :TextArea;
            %tmp.92 = newc %tmp.95;
            %tmp.96 = dup %tmp.92;
            %tmp.97 = getv const %tmp.96 :initialize;
            %tmp.98 = dup %tmp.92;
            %tmp.99 = newd 9;
            %tmp.100 = :identifier;
            %tmp.101 = "subLabel";
            %tmp.102 = dup %tmp.99;
            %tmp.103 = aputv %tmp.102 %tmp.100 %tmp.101;
            %tmp.104 = :color;
            %tmp.105 = getm $.Toybox.Graphics;
            %tmp.106 = getv %tmp.105 :COLOR_WHITE;
            %tmp.107 = dup %tmp.103;
            %tmp.108 = aputv %tmp.107 %tmp.104 %tmp.106;
            %tmp.109 = :width;
            %tmp.111 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.112 = 100;
            %tmp.113 = 100.0;
            %tmp.114 = div %tmp.112 %tmp.113;
            %tmp.115 = mul %tmp.111 %tmp.114;
            %tmp.116 = dup %tmp.108;
            %tmp.117 = aputv %tmp.116 %tmp.109 %tmp.115;
            %tmp.118 = :locX;
            %tmp.120 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.121 = 2;
            %tmp.122 = div %tmp.120 %tmp.121;
            %tmp.124 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.125 = 100;
            %tmp.126 = 100.0;
            %tmp.127 = div %tmp.125 %tmp.126;
            %tmp.128 = mul %tmp.124 %tmp.127;
            %tmp.129 = 2;
            %tmp.130 = div %tmp.128 %tmp.129;
            %tmp.131 = sub %tmp.122 %tmp.130;
            %tmp.132 = dup %tmp.117;
            %tmp.133 = aputv %tmp.132 %tmp.118 %tmp.131;
            %tmp.134 = :locY;
            %tmp.136 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.137 = 32;
            %tmp.138 = 100.0;
            %tmp.139 = div %tmp.137 %tmp.138;
            %tmp.140 = mul %tmp.136 %tmp.139;
            %tmp.141 = dup %tmp.133;
            %tmp.142 = aputv %tmp.141 %tmp.134 %tmp.140;
            %tmp.143 = :text;
            %tmp.144 = "";
            %tmp.145 = dup %tmp.142;
            %tmp.146 = aputv %tmp.145 %tmp.143 %tmp.144;
            %tmp.147 = :justification;
            %tmp.148 = getm $.Toybox.Graphics;
            %tmp.149 = getv %tmp.148 :TEXT_JUSTIFY_CENTER;
            %tmp.150 = dup %tmp.146;
            %tmp.151 = aputv %tmp.150 %tmp.147 %tmp.149;
            %tmp.152 = :height;
            %tmp.154 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.155 = 100;
            %tmp.156 = 100.0;
            %tmp.157 = div %tmp.155 %tmp.156;
            %tmp.158 = mul %tmp.154 %tmp.157;
            %tmp.159 = dup %tmp.151;
            %tmp.160 = aputv %tmp.159 %tmp.152 %tmp.158;
            %tmp.161 = :font;
            %tmp.162 = newa Array<Graphics.FontType> 1;
            %tmp.163 = getm $.Toybox.Graphics;
            %tmp.164 = getv %tmp.163 :FONT_SYSTEM_XTINY;
            %tmp.165 = dup %tmp.162;
            %tmp.166 = aputv %tmp.165 0 %tmp.164;
            %tmp.167 = dup %tmp.160;
            %tmp.168 = aputv %tmp.167 %tmp.161 %tmp.166;
            invoke %tmp.98 %tmp.97(%tmp.168);
            lputv %rez_cmp_local_textarea_subLabel.5 %tmp.92;
[ "Rez.mc" 116 ]
            %rez_cmp_local_textarea_value.6 = local;
            %tmp.171 = getm $.Toybox.WatchUi;
            %tmp.172 = getv %tmp.171 :TextArea;
            %tmp.169 = newc %tmp.172;
            %tmp.173 = dup %tmp.169;
            %tmp.174 = getv const %tmp.173 :initialize;
            %tmp.175 = dup %tmp.169;
            %tmp.176 = newd 9;
            %tmp.177 = :identifier;
            %tmp.178 = "value";
            %tmp.179 = dup %tmp.176;
            %tmp.180 = aputv %tmp.179 %tmp.177 %tmp.178;
            %tmp.181 = :color;
            %tmp.182 = getm $.Toybox.Graphics;
            %tmp.183 = getv %tmp.182 :COLOR_WHITE;
            %tmp.184 = dup %tmp.180;
            %tmp.185 = aputv %tmp.184 %tmp.181 %tmp.183;
            %tmp.186 = :width;
            %tmp.188 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.189 = 100;
            %tmp.190 = 100.0;
            %tmp.191 = div %tmp.189 %tmp.190;
            %tmp.192 = mul %tmp.188 %tmp.191;
            %tmp.193 = dup %tmp.185;
            %tmp.194 = aputv %tmp.193 %tmp.186 %tmp.192;
            %tmp.195 = :locX;
            %tmp.197 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.198 = 2;
            %tmp.199 = div %tmp.197 %tmp.198;
            %tmp.201 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.202 = 100;
            %tmp.203 = 100.0;
            %tmp.204 = div %tmp.202 %tmp.203;
            %tmp.205 = mul %tmp.201 %tmp.204;
            %tmp.206 = 2;
            %tmp.207 = div %tmp.205 %tmp.206;
            %tmp.208 = sub %tmp.199 %tmp.207;
            %tmp.209 = dup %tmp.194;
            %tmp.210 = aputv %tmp.209 %tmp.195 %tmp.208;
            %tmp.211 = :locY;
            %tmp.213 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.214 = 40;
            %tmp.215 = 100.0;
            %tmp.216 = div %tmp.214 %tmp.215;
            %tmp.217 = mul %tmp.213 %tmp.216;
            %tmp.218 = dup %tmp.210;
            %tmp.219 = aputv %tmp.218 %tmp.211 %tmp.217;
            %tmp.220 = :text;
            %tmp.221 = "";
            %tmp.222 = dup %tmp.219;
            %tmp.223 = aputv %tmp.222 %tmp.220 %tmp.221;
            %tmp.224 = :justification;
            %tmp.225 = getm $.Toybox.Graphics;
            %tmp.226 = getv %tmp.225 :TEXT_JUSTIFY_CENTER;
            %tmp.227 = dup %tmp.223;
            %tmp.228 = aputv %tmp.227 %tmp.224 %tmp.226;
            %tmp.229 = :height;
            %tmp.231 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.232 = 100;
            %tmp.233 = 100.0;
            %tmp.234 = div %tmp.232 %tmp.233;
            %tmp.235 = mul %tmp.231 %tmp.234;
            %tmp.236 = dup %tmp.228;
            %tmp.237 = aputv %tmp.236 %tmp.229 %tmp.235;
            %tmp.238 = :font;
            %tmp.239 = newa Array<Graphics.FontType> 1;
            %tmp.240 = getm $.Toybox.Graphics;
            %tmp.241 = getv %tmp.240 :FONT_SYSTEM_NUMBER_MILD;
            %tmp.242 = dup %tmp.239;
            %tmp.243 = aputv %tmp.242 0 %tmp.241;
            %tmp.244 = dup %tmp.237;
            %tmp.245 = aputv %tmp.244 %tmp.238 %tmp.243;
            invoke %tmp.175 %tmp.174(%tmp.245);
            lputv %rez_cmp_local_textarea_value.6 %tmp.169;
[ "Rez.mc" 118 ]
            %tmp.246 = newa Array<WatchUi.Drawable> 4;
            %tmp.248 = lgetv %rez_cmp_local_custom_drawable_20800209421881119293.3;
            %tmp.249 = dup %tmp.246;
            %tmp.250 = aputv %tmp.249 0 %tmp.248;
            %tmp.252 = lgetv %rez_cmp_local_textarea_label.4;
            %tmp.253 = dup %tmp.250;
            %tmp.254 = aputv %tmp.253 1 %tmp.252;
            %tmp.256 = lgetv %rez_cmp_local_textarea_subLabel.5;
            %tmp.257 = dup %tmp.254;
            %tmp.258 = aputv %tmp.257 2 %tmp.256;
            %tmp.260 = lgetv %rez_cmp_local_textarea_value.6;
            %tmp.261 = dup %tmp.258;
            %tmp.262 = aputv %tmp.261 3 %tmp.260;
            ret %tmp.262;
        }
        [ @file = "Rez.mc"; @line = 122; ]
        using Toybox.WatchUi;
        [ @file = "Rez.mc"; @line = 123; ]
        using Toybox.WatchUi as :Ui;
        [ @file = "Rez.mc"; @line = 124; ]
        using Toybox.Graphics;
        [ @file = "Rez.mc"; @line = 125; ]
        using Toybox.Graphics as :Gfx;
        [ @file = "Rez.mc"; @line = 127; ]
        function CenterLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
[ "Rez.mc" 129 ]
            %rez_cmp_local_var_dc_getHeight.1 = local;
            %tmp.2 = lgetv %dc;
            %tmp.3 = getv const %tmp.2 :getHeight;
            %tmp.4 = invoke %tmp.2 %tmp.3();
            lputv %rez_cmp_local_var_dc_getHeight.1 %tmp.4;
[ "Rez.mc" 130 ]
            %rez_cmp_local_var_dc_getWidth.2 = local;
            %tmp.6 = lgetv %dc;
            %tmp.7 = getv const %tmp.6 :getWidth;
            %tmp.8 = invoke %tmp.6 %tmp.7();
            lputv %rez_cmp_local_var_dc_getWidth.2 %tmp.8;
[ "Rez.mc" 132 ]
            %rez_cmp_local_custom_drawable_20056757741790980990.3 = local;
            %tmp.12 = getv ? :Background;
            %tmp.9 = newc %tmp.12;
            %tmp.13 = dup %tmp.9;
            %tmp.14 = getv const %tmp.13 :initialize;
            %tmp.15 = dup %tmp.9;
            invoke %tmp.15 %tmp.14();
            lputv %rez_cmp_local_custom_drawable_20056757741790980990.3 %tmp.9;
[ "Rez.mc" 133 ]
            %rez_cmp_local_textarea_label.4 = local;
            %tmp.18 = getm $.Toybox.WatchUi;
            %tmp.19 = getv %tmp.18 :TextArea;
            %tmp.16 = newc %tmp.19;
            %tmp.20 = dup %tmp.16;
            %tmp.21 = getv const %tmp.20 :initialize;
            %tmp.22 = dup %tmp.16;
            %tmp.23 = newd 9;
            %tmp.24 = :identifier;
            %tmp.25 = "label";
            %tmp.26 = dup %tmp.23;
            %tmp.27 = aputv %tmp.26 %tmp.24 %tmp.25;
            %tmp.28 = :color;
            %tmp.29 = getm $.Toybox.Graphics;
            %tmp.30 = getv %tmp.29 :COLOR_WHITE;
            %tmp.31 = dup %tmp.27;
            %tmp.32 = aputv %tmp.31 %tmp.28 %tmp.30;
            %tmp.33 = :width;
            %tmp.35 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.36 = 60;
            %tmp.37 = 100.0;
            %tmp.38 = div %tmp.36 %tmp.37;
            %tmp.39 = mul %tmp.35 %tmp.38;
            %tmp.40 = dup %tmp.32;
            %tmp.41 = aputv %tmp.40 %tmp.33 %tmp.39;
            %tmp.42 = :locX;
            %tmp.44 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.45 = 2;
            %tmp.46 = 100.0;
            %tmp.47 = div %tmp.45 %tmp.46;
            %tmp.48 = mul %tmp.44 %tmp.47;
            %tmp.49 = dup %tmp.41;
            %tmp.50 = aputv %tmp.49 %tmp.42 %tmp.48;
            %tmp.51 = :locY;
            %tmp.53 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.54 = 10;
            %tmp.55 = 100.0;
            %tmp.56 = div %tmp.54 %tmp.55;
            %tmp.57 = mul %tmp.53 %tmp.56;
            %tmp.58 = dup %tmp.50;
            %tmp.59 = aputv %tmp.58 %tmp.51 %tmp.57;
            %tmp.60 = :text;
            %tmp.61 = "";
            %tmp.62 = dup %tmp.59;
            %tmp.63 = aputv %tmp.62 %tmp.60 %tmp.61;
            %tmp.64 = :justification;
            %tmp.65 = getm $.Toybox.Graphics;
            %tmp.66 = getv %tmp.65 :TEXT_JUSTIFY_CENTER;
            %tmp.67 = dup %tmp.63;
            %tmp.68 = aputv %tmp.67 %tmp.64 %tmp.66;
            %tmp.69 = :height;
            %tmp.71 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.72 = 50;
            %tmp.73 = 100.0;
            %tmp.74 = div %tmp.72 %tmp.73;
            %tmp.75 = mul %tmp.71 %tmp.74;
            %tmp.76 = dup %tmp.68;
            %tmp.77 = aputv %tmp.76 %tmp.69 %tmp.75;
            %tmp.78 = :font;
            %tmp.79 = newa Array<Graphics.FontType> 3;
            %tmp.80 = getm $.Toybox.Graphics;
            %tmp.81 = getv %tmp.80 :FONT_SYSTEM_SMALL;
            %tmp.82 = dup %tmp.79;
            %tmp.83 = aputv %tmp.82 0 %tmp.81;
            %tmp.84 = getm $.Toybox.Graphics;
            %tmp.85 = getv %tmp.84 :FONT_SYSTEM_TINY;
            %tmp.86 = dup %tmp.83;
            %tmp.87 = aputv %tmp.86 1 %tmp.85;
            %tmp.88 = getm $.Toybox.Graphics;
            %tmp.89 = getv %tmp.88 :FONT_SYSTEM_XTINY;
            %tmp.90 = dup %tmp.87;
            %tmp.91 = aputv %tmp.90 2 %tmp.89;
            %tmp.92 = dup %tmp.77;
            %tmp.93 = aputv %tmp.92 %tmp.78 %tmp.91;
            invoke %tmp.22 %tmp.21(%tmp.93);
            lputv %rez_cmp_local_textarea_label.4 %tmp.16;
[ "Rez.mc" 134 ]
            %rez_cmp_local_textarea_subLabel.5 = local;
            %tmp.96 = getm $.Toybox.WatchUi;
            %tmp.97 = getv %tmp.96 :TextArea;
            %tmp.94 = newc %tmp.97;
            %tmp.98 = dup %tmp.94;
            %tmp.99 = getv const %tmp.98 :initialize;
            %tmp.100 = dup %tmp.94;
            %tmp.101 = newd 9;
            %tmp.102 = :identifier;
            %tmp.103 = "subLabel";
            %tmp.104 = dup %tmp.101;
            %tmp.105 = aputv %tmp.104 %tmp.102 %tmp.103;
            %tmp.106 = :color;
            %tmp.107 = getm $.Toybox.Graphics;
            %tmp.108 = getv %tmp.107 :COLOR_WHITE;
            %tmp.109 = dup %tmp.105;
            %tmp.110 = aputv %tmp.109 %tmp.106 %tmp.108;
            %tmp.111 = :width;
            %tmp.113 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.114 = 60;
            %tmp.115 = 100.0;
            %tmp.116 = div %tmp.114 %tmp.115;
            %tmp.117 = mul %tmp.113 %tmp.116;
            %tmp.118 = dup %tmp.110;
            %tmp.119 = aputv %tmp.118 %tmp.111 %tmp.117;
            %tmp.120 = :locX;
            %tmp.122 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.123 = 2;
            %tmp.124 = 100.0;
            %tmp.125 = div %tmp.123 %tmp.124;
            %tmp.126 = mul %tmp.122 %tmp.125;
            %tmp.127 = dup %tmp.119;
            %tmp.128 = aputv %tmp.127 %tmp.120 %tmp.126;
            %tmp.129 = :locY;
            %tmp.131 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.132 = 55;
            %tmp.133 = 100.0;
            %tmp.134 = div %tmp.132 %tmp.133;
            %tmp.135 = mul %tmp.131 %tmp.134;
            %tmp.136 = dup %tmp.128;
            %tmp.137 = aputv %tmp.136 %tmp.129 %tmp.135;
            %tmp.138 = :text;
            %tmp.139 = "";
            %tmp.140 = dup %tmp.137;
            %tmp.141 = aputv %tmp.140 %tmp.138 %tmp.139;
            %tmp.142 = :justification;
            %tmp.143 = getm $.Toybox.Graphics;
            %tmp.144 = getv %tmp.143 :TEXT_JUSTIFY_CENTER;
            %tmp.145 = dup %tmp.141;
            %tmp.146 = aputv %tmp.145 %tmp.142 %tmp.144;
            %tmp.147 = :height;
            %tmp.149 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.150 = 50;
            %tmp.151 = 100.0;
            %tmp.152 = div %tmp.150 %tmp.151;
            %tmp.153 = mul %tmp.149 %tmp.152;
            %tmp.154 = dup %tmp.146;
            %tmp.155 = aputv %tmp.154 %tmp.147 %tmp.153;
            %tmp.156 = :font;
            %tmp.157 = newa Array<Graphics.FontType> 3;
            %tmp.158 = getm $.Toybox.Graphics;
            %tmp.159 = getv %tmp.158 :FONT_SYSTEM_SMALL;
            %tmp.160 = dup %tmp.157;
            %tmp.161 = aputv %tmp.160 0 %tmp.159;
            %tmp.162 = getm $.Toybox.Graphics;
            %tmp.163 = getv %tmp.162 :FONT_SYSTEM_TINY;
            %tmp.164 = dup %tmp.161;
            %tmp.165 = aputv %tmp.164 1 %tmp.163;
            %tmp.166 = getm $.Toybox.Graphics;
            %tmp.167 = getv %tmp.166 :FONT_SYSTEM_XTINY;
            %tmp.168 = dup %tmp.165;
            %tmp.169 = aputv %tmp.168 2 %tmp.167;
            %tmp.170 = dup %tmp.155;
            %tmp.171 = aputv %tmp.170 %tmp.156 %tmp.169;
            invoke %tmp.100 %tmp.99(%tmp.171);
            lputv %rez_cmp_local_textarea_subLabel.5 %tmp.94;
[ "Rez.mc" 135 ]
            %rez_cmp_local_textarea_value.6 = local;
            %tmp.174 = getm $.Toybox.WatchUi;
            %tmp.175 = getv %tmp.174 :TextArea;
            %tmp.172 = newc %tmp.175;
            %tmp.176 = dup %tmp.172;
            %tmp.177 = getv const %tmp.176 :initialize;
            %tmp.178 = dup %tmp.172;
            %tmp.179 = newd 9;
            %tmp.180 = :identifier;
            %tmp.181 = "value";
            %tmp.182 = dup %tmp.179;
            %tmp.183 = aputv %tmp.182 %tmp.180 %tmp.181;
            %tmp.184 = :color;
            %tmp.185 = getm $.Toybox.Graphics;
            %tmp.186 = getv %tmp.185 :COLOR_WHITE;
            %tmp.187 = dup %tmp.183;
            %tmp.188 = aputv %tmp.187 %tmp.184 %tmp.186;
            %tmp.189 = :width;
            %tmp.191 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.192 = 40;
            %tmp.193 = 100.0;
            %tmp.194 = div %tmp.192 %tmp.193;
            %tmp.195 = mul %tmp.191 %tmp.194;
            %tmp.196 = dup %tmp.188;
            %tmp.197 = aputv %tmp.196 %tmp.189 %tmp.195;
            %tmp.198 = :locX;
            %tmp.200 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.202 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.203 = 40;
            %tmp.204 = 100.0;
            %tmp.205 = div %tmp.203 %tmp.204;
            %tmp.206 = mul %tmp.202 %tmp.205;
            %tmp.207 = sub %tmp.200 %tmp.206;
            %tmp.208 = dup %tmp.197;
            %tmp.209 = aputv %tmp.208 %tmp.198 %tmp.207;
            %tmp.210 = :locY;
            %tmp.212 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.213 = 27;
            %tmp.214 = 100.0;
            %tmp.215 = div %tmp.213 %tmp.214;
            %tmp.216 = mul %tmp.212 %tmp.215;
            %tmp.217 = dup %tmp.209;
            %tmp.218 = aputv %tmp.217 %tmp.210 %tmp.216;
            %tmp.219 = :text;
            %tmp.220 = "";
            %tmp.221 = dup %tmp.218;
            %tmp.222 = aputv %tmp.221 %tmp.219 %tmp.220;
            %tmp.223 = :justification;
            %tmp.224 = getm $.Toybox.Graphics;
            %tmp.225 = getv %tmp.224 :TEXT_JUSTIFY_CENTER;
            %tmp.226 = dup %tmp.222;
            %tmp.227 = aputv %tmp.226 %tmp.223 %tmp.225;
            %tmp.228 = :height;
            %tmp.230 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.231 = 80;
            %tmp.232 = 100.0;
            %tmp.233 = div %tmp.231 %tmp.232;
            %tmp.234 = mul %tmp.230 %tmp.233;
            %tmp.235 = dup %tmp.227;
            %tmp.236 = aputv %tmp.235 %tmp.228 %tmp.234;
            %tmp.237 = :font;
            %tmp.238 = newa Array<Graphics.FontType> 3;
            %tmp.239 = getm $.Toybox.Graphics;
            %tmp.240 = getv %tmp.239 :FONT_SYSTEM_NUMBER_MEDIUM;
            %tmp.241 = dup %tmp.238;
            %tmp.242 = aputv %tmp.241 0 %tmp.240;
            %tmp.243 = getm $.Toybox.Graphics;
            %tmp.244 = getv %tmp.243 :FONT_SYSTEM_NUMBER_MILD;
            %tmp.245 = dup %tmp.242;
            %tmp.246 = aputv %tmp.245 1 %tmp.244;
            %tmp.247 = getm $.Toybox.Graphics;
            %tmp.248 = getv %tmp.247 :FONT_SYSTEM_LARGE;
            %tmp.249 = dup %tmp.246;
            %tmp.250 = aputv %tmp.249 2 %tmp.248;
            %tmp.251 = dup %tmp.236;
            %tmp.252 = aputv %tmp.251 %tmp.237 %tmp.250;
            invoke %tmp.178 %tmp.177(%tmp.252);
            lputv %rez_cmp_local_textarea_value.6 %tmp.172;
[ "Rez.mc" 137 ]
            %tmp.253 = newa Array<WatchUi.Drawable> 4;
            %tmp.255 = lgetv %rez_cmp_local_custom_drawable_20056757741790980990.3;
            %tmp.256 = dup %tmp.253;
            %tmp.257 = aputv %tmp.256 0 %tmp.255;
            %tmp.259 = lgetv %rez_cmp_local_textarea_label.4;
            %tmp.260 = dup %tmp.257;
            %tmp.261 = aputv %tmp.260 1 %tmp.259;
            %tmp.263 = lgetv %rez_cmp_local_textarea_subLabel.5;
            %tmp.264 = dup %tmp.261;
            %tmp.265 = aputv %tmp.264 2 %tmp.263;
            %tmp.267 = lgetv %rez_cmp_local_textarea_value.6;
            %tmp.268 = dup %tmp.265;
            %tmp.269 = aputv %tmp.268 3 %tmp.267;
            ret %tmp.269;
        }
        [ @file = "Rez.mc"; @line = 141; ]
        using Toybox.WatchUi;
        [ @file = "Rez.mc"; @line = 142; ]
        using Toybox.WatchUi as :Ui;
        [ @file = "Rez.mc"; @line = 143; ]
        using Toybox.Graphics;
        [ @file = "Rez.mc"; @line = 144; ]
        using Toybox.Graphics as :Gfx;
        [ @file = "Rez.mc"; @line = 146; ]
        function OtherLayout(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
[ "Rez.mc" 148 ]
            %rez_cmp_local_var_dc_getHeight.1 = local;
            %tmp.2 = lgetv %dc;
            %tmp.3 = getv const %tmp.2 :getHeight;
            %tmp.4 = invoke %tmp.2 %tmp.3();
            lputv %rez_cmp_local_var_dc_getHeight.1 %tmp.4;
[ "Rez.mc" 149 ]
            %rez_cmp_local_var_dc_getWidth.2 = local;
            %tmp.6 = lgetv %dc;
            %tmp.7 = getv const %tmp.6 :getWidth;
            %tmp.8 = invoke %tmp.6 %tmp.7();
            lputv %rez_cmp_local_var_dc_getWidth.2 %tmp.8;
[ "Rez.mc" 151 ]
            %rez_cmp_local_custom_drawable_12167686651280568418.3 = local;
            %tmp.12 = getv ? :Background;
            %tmp.9 = newc %tmp.12;
            %tmp.13 = dup %tmp.9;
            %tmp.14 = getv const %tmp.13 :initialize;
            %tmp.15 = dup %tmp.9;
            invoke %tmp.15 %tmp.14();
            lputv %rez_cmp_local_custom_drawable_12167686651280568418.3 %tmp.9;
[ "Rez.mc" 152 ]
            %rez_cmp_local_textarea_label.4 = local;
            %tmp.18 = getm $.Toybox.WatchUi;
            %tmp.19 = getv %tmp.18 :TextArea;
            %tmp.16 = newc %tmp.19;
            %tmp.20 = dup %tmp.16;
            %tmp.21 = getv const %tmp.20 :initialize;
            %tmp.22 = dup %tmp.16;
            %tmp.23 = newd 9;
            %tmp.24 = :identifier;
            %tmp.25 = "label";
            %tmp.26 = dup %tmp.23;
            %tmp.27 = aputv %tmp.26 %tmp.24 %tmp.25;
            %tmp.28 = :color;
            %tmp.29 = getm $.Toybox.Graphics;
            %tmp.30 = getv %tmp.29 :COLOR_WHITE;
            %tmp.31 = dup %tmp.27;
            %tmp.32 = aputv %tmp.31 %tmp.28 %tmp.30;
            %tmp.33 = :width;
            %tmp.35 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.36 = 100;
            %tmp.37 = 100.0;
            %tmp.38 = div %tmp.36 %tmp.37;
            %tmp.39 = mul %tmp.35 %tmp.38;
            %tmp.40 = dup %tmp.32;
            %tmp.41 = aputv %tmp.40 %tmp.33 %tmp.39;
            %tmp.42 = :locX;
            %tmp.44 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.45 = 2;
            %tmp.46 = div %tmp.44 %tmp.45;
            %tmp.48 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.49 = 100;
            %tmp.50 = 100.0;
            %tmp.51 = div %tmp.49 %tmp.50;
            %tmp.52 = mul %tmp.48 %tmp.51;
            %tmp.53 = 2;
            %tmp.54 = div %tmp.52 %tmp.53;
            %tmp.55 = sub %tmp.46 %tmp.54;
            %tmp.56 = dup %tmp.41;
            %tmp.57 = aputv %tmp.56 %tmp.42 %tmp.55;
            %tmp.58 = :locY;
            %tmp.59 = 0;
            %tmp.60 = dup %tmp.57;
            %tmp.61 = aputv %tmp.60 %tmp.58 %tmp.59;
            %tmp.62 = :text;
            %tmp.63 = "";
            %tmp.64 = dup %tmp.61;
            %tmp.65 = aputv %tmp.64 %tmp.62 %tmp.63;
            %tmp.66 = :justification;
            %tmp.67 = getm $.Toybox.Graphics;
            %tmp.68 = getv %tmp.67 :TEXT_JUSTIFY_CENTER;
            %tmp.69 = dup %tmp.65;
            %tmp.70 = aputv %tmp.69 %tmp.66 %tmp.68;
            %tmp.71 = :height;
            %tmp.73 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.74 = 50;
            %tmp.75 = 100.0;
            %tmp.76 = div %tmp.74 %tmp.75;
            %tmp.77 = mul %tmp.73 %tmp.76;
            %tmp.78 = dup %tmp.70;
            %tmp.79 = aputv %tmp.78 %tmp.71 %tmp.77;
            %tmp.80 = :font;
            %tmp.81 = newa Array<Graphics.FontType> 3;
            %tmp.82 = getm $.Toybox.Graphics;
            %tmp.83 = getv %tmp.82 :FONT_SYSTEM_SMALL;
            %tmp.84 = dup %tmp.81;
            %tmp.85 = aputv %tmp.84 0 %tmp.83;
            %tmp.86 = getm $.Toybox.Graphics;
            %tmp.87 = getv %tmp.86 :FONT_SYSTEM_TINY;
            %tmp.88 = dup %tmp.85;
            %tmp.89 = aputv %tmp.88 1 %tmp.87;
            %tmp.90 = getm $.Toybox.Graphics;
            %tmp.91 = getv %tmp.90 :FONT_SYSTEM_XTINY;
            %tmp.92 = dup %tmp.89;
            %tmp.93 = aputv %tmp.92 2 %tmp.91;
            %tmp.94 = dup %tmp.79;
            %tmp.95 = aputv %tmp.94 %tmp.80 %tmp.93;
            invoke %tmp.22 %tmp.21(%tmp.95);
            lputv %rez_cmp_local_textarea_label.4 %tmp.16;
[ "Rez.mc" 153 ]
            %rez_cmp_local_textarea_subLabel.5 = local;
            %tmp.98 = getm $.Toybox.WatchUi;
            %tmp.99 = getv %tmp.98 :TextArea;
            %tmp.96 = newc %tmp.99;
            %tmp.100 = dup %tmp.96;
            %tmp.101 = getv const %tmp.100 :initialize;
            %tmp.102 = dup %tmp.96;
            %tmp.103 = newd 9;
            %tmp.104 = :identifier;
            %tmp.105 = "subLabel";
            %tmp.106 = dup %tmp.103;
            %tmp.107 = aputv %tmp.106 %tmp.104 %tmp.105;
            %tmp.108 = :color;
            %tmp.109 = getm $.Toybox.Graphics;
            %tmp.110 = getv %tmp.109 :COLOR_WHITE;
            %tmp.111 = dup %tmp.107;
            %tmp.112 = aputv %tmp.111 %tmp.108 %tmp.110;
            %tmp.113 = :width;
            %tmp.115 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.116 = 100;
            %tmp.117 = 100.0;
            %tmp.118 = div %tmp.116 %tmp.117;
            %tmp.119 = mul %tmp.115 %tmp.118;
            %tmp.120 = dup %tmp.112;
            %tmp.121 = aputv %tmp.120 %tmp.113 %tmp.119;
            %tmp.122 = :locX;
            %tmp.124 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.125 = 2;
            %tmp.126 = div %tmp.124 %tmp.125;
            %tmp.128 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.129 = 100;
            %tmp.130 = 100.0;
            %tmp.131 = div %tmp.129 %tmp.130;
            %tmp.132 = mul %tmp.128 %tmp.131;
            %tmp.133 = 2;
            %tmp.134 = div %tmp.132 %tmp.133;
            %tmp.135 = sub %tmp.126 %tmp.134;
            %tmp.136 = dup %tmp.121;
            %tmp.137 = aputv %tmp.136 %tmp.122 %tmp.135;
            %tmp.138 = :locY;
            %tmp.140 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.142 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.143 = 50;
            %tmp.144 = 100.0;
            %tmp.145 = div %tmp.143 %tmp.144;
            %tmp.146 = mul %tmp.142 %tmp.145;
            %tmp.147 = sub %tmp.140 %tmp.146;
            %tmp.148 = dup %tmp.137;
            %tmp.149 = aputv %tmp.148 %tmp.138 %tmp.147;
            %tmp.150 = :text;
            %tmp.151 = "";
            %tmp.152 = dup %tmp.149;
            %tmp.153 = aputv %tmp.152 %tmp.150 %tmp.151;
            %tmp.154 = :justification;
            %tmp.155 = getm $.Toybox.Graphics;
            %tmp.156 = getv %tmp.155 :TEXT_JUSTIFY_CENTER;
            %tmp.157 = dup %tmp.153;
            %tmp.158 = aputv %tmp.157 %tmp.154 %tmp.156;
            %tmp.159 = :height;
            %tmp.161 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.162 = 50;
            %tmp.163 = 100.0;
            %tmp.164 = div %tmp.162 %tmp.163;
            %tmp.165 = mul %tmp.161 %tmp.164;
            %tmp.166 = dup %tmp.158;
            %tmp.167 = aputv %tmp.166 %tmp.159 %tmp.165;
            %tmp.168 = :font;
            %tmp.169 = newa Array<Graphics.FontType> 3;
            %tmp.170 = getm $.Toybox.Graphics;
            %tmp.171 = getv %tmp.170 :FONT_SYSTEM_SMALL;
            %tmp.172 = dup %tmp.169;
            %tmp.173 = aputv %tmp.172 0 %tmp.171;
            %tmp.174 = getm $.Toybox.Graphics;
            %tmp.175 = getv %tmp.174 :FONT_SYSTEM_TINY;
            %tmp.176 = dup %tmp.173;
            %tmp.177 = aputv %tmp.176 1 %tmp.175;
            %tmp.178 = getm $.Toybox.Graphics;
            %tmp.179 = getv %tmp.178 :FONT_SYSTEM_XTINY;
            %tmp.180 = dup %tmp.177;
            %tmp.181 = aputv %tmp.180 2 %tmp.179;
            %tmp.182 = dup %tmp.167;
            %tmp.183 = aputv %tmp.182 %tmp.168 %tmp.181;
            invoke %tmp.102 %tmp.101(%tmp.183);
            lputv %rez_cmp_local_textarea_subLabel.5 %tmp.96;
[ "Rez.mc" 154 ]
            %rez_cmp_local_text_value.6 = local;
            %tmp.186 = getm $.Toybox.WatchUi;
            %tmp.187 = getv %tmp.186 :Text;
            %tmp.184 = newc %tmp.187;
            %tmp.188 = dup %tmp.184;
            %tmp.189 = getv const %tmp.188 :initialize;
            %tmp.190 = dup %tmp.184;
            %tmp.191 = newd 6;
            %tmp.192 = :identifier;
            %tmp.193 = "value";
            %tmp.194 = dup %tmp.191;
            %tmp.195 = aputv %tmp.194 %tmp.192 %tmp.193;
            %tmp.196 = :color;
            %tmp.197 = getm $.Toybox.Graphics;
            %tmp.198 = getv %tmp.197 :COLOR_WHITE;
            %tmp.199 = dup %tmp.195;
            %tmp.200 = aputv %tmp.199 %tmp.196 %tmp.198;
            %tmp.201 = :locX;
            %tmp.203 = lgetv %rez_cmp_local_var_dc_getWidth.2;
            %tmp.204 = 0.5;
            %tmp.205 = mul %tmp.203 %tmp.204;
            %tmp.206 = dup %tmp.200;
            %tmp.207 = aputv %tmp.206 %tmp.201 %tmp.205;
            %tmp.208 = :locY;
            %tmp.210 = lgetv %rez_cmp_local_var_dc_getHeight.1;
            %tmp.211 = 0;
            %tmp.212 = 100.0;
            %tmp.213 = div %tmp.211 %tmp.212;
            %tmp.214 = mul %tmp.210 %tmp.213;
            %tmp.215 = dup %tmp.207;
            %tmp.216 = aputv %tmp.215 %tmp.208 %tmp.214;
            %tmp.217 = :justification;
            %tmp.218 = getm $.Toybox.Graphics;
            %tmp.219 = getv %tmp.218 :TEXT_JUSTIFY_CENTER;
            %tmp.220 = dup %tmp.216;
            %tmp.221 = aputv %tmp.220 %tmp.217 %tmp.219;
            %tmp.222 = :font;
            %tmp.223 = getm $.Toybox.Graphics;
            %tmp.224 = getv %tmp.223 :FONT_SYSTEM_NUMBER_MEDIUM;
            %tmp.225 = dup %tmp.221;
            %tmp.226 = aputv %tmp.225 %tmp.222 %tmp.224;
            invoke %tmp.190 %tmp.189(%tmp.226);
            lputv %rez_cmp_local_text_value.6 %tmp.184;
[ "Rez.mc" 156 ]
            %tmp.227 = newa Array<WatchUi.Drawable> 4;
            %tmp.229 = lgetv %rez_cmp_local_custom_drawable_12167686651280568418.3;
            %tmp.230 = dup %tmp.227;
            %tmp.231 = aputv %tmp.230 0 %tmp.229;
            %tmp.233 = lgetv %rez_cmp_local_textarea_label.4;
            %tmp.234 = dup %tmp.231;
            %tmp.235 = aputv %tmp.234 1 %tmp.233;
            %tmp.237 = lgetv %rez_cmp_local_textarea_subLabel.5;
            %tmp.238 = dup %tmp.235;
            %tmp.239 = aputv %tmp.238 2 %tmp.237;
            %tmp.241 = lgetv %rez_cmp_local_text_value.6;
            %tmp.242 = dup %tmp.239;
            %tmp.243 = aputv %tmp.242 3 %tmp.241;
            ret %tmp.243;
        }
    }
    [ @file = "Rez.mc"; @line = 161; ]
    module Menus {
        [ @file = "Rez.mc"; @line = 161; ]
        <init> {
        }
    }
    [ @file = "Rez.mc"; @line = 163; ]
    module Strings {
        [ @file = "Rez.mc"; @line = 163; ]
        <init> {
        }
        [ @file = "Rez.mc"; @line = 164; ]
        import Toybox.Lang;
        [ @file = "Rez.mc"; @line = 165; initialized = true; ]
        var BH_subLabel7_title as Symbol;
        [ @file = "Rez.mc"; @line = 166; initialized = true; ]
        var data_label as Symbol;
        [ @file = "Rez.mc"; @line = 167; initialized = true; ]
        var batteryData_label as Symbol;
        [ @file = "Rez.mc"; @line = 168; initialized = true; ]
        var BH_subLabel16_title as Symbol;
        [ @file = "Rez.mc"; @line = 169; initialized = true; ]
        var MenuLabelAlarmeOFF as Symbol;
        [ @file = "Rez.mc"; @line = 170; initialized = true; ]
        var BH1_Label_length_Error as Symbol;
        [ @file = "Rez.mc"; @line = 171; initialized = true; ]
        var MenuLabelDecalage as Symbol;
        [ @file = "Rez.mc"; @line = 172; initialized = true; ]
        var field_label as Symbol;
        [ @file = "Rez.mc"; @line = 173; initialized = true; ]
        var field_units as Symbol;
        [ @file = "Rez.mc"; @line = 174; initialized = true; ]
        var BH_Time4_title as Symbol;
        [ @file = "Rez.mc"; @line = 175; initialized = true; ]
        var BH_label9_title as Symbol;
        [ @file = "Rez.mc"; @line = 176; initialized = true; ]
        var BH_label16_title as Symbol;
        [ @file = "Rez.mc"; @line = 177; initialized = true; ]
        var step_label as Symbol;
        [ @file = "Rez.mc"; @line = 178; initialized = true; ]
        var BH1_Time_length_Error as Symbol;
        [ @file = "Rez.mc"; @line = 179; initialized = true; ]
        var BH_subLabel4_title as Symbol;
        [ @file = "Rez.mc"; @line = 180; initialized = true; ]
        var MenuSousLabelGoBarriere as Symbol;
        [ @file = "Rez.mc"; @line = 181; initialized = true; ]
        var BH_label5_title as Symbol;
        [ @file = "Rez.mc"; @line = 182; initialized = true; ]
        var BH_Time18_title as Symbol;
        [ @file = "Rez.mc"; @line = 183; initialized = true; ]
        var batteryGraph_label as Symbol;
        [ @file = "Rez.mc"; @line = 184; initialized = true; ]
        var unit_vide as Symbol;
        [ @file = "Rez.mc"; @line = 185; initialized = true; ]
        var BH_subLabel3_title as Symbol;
        [ @file = "Rez.mc"; @line = 186; initialized = true; ]
        var BH_Time20_title as Symbol;
        [ @file = "Rez.mc"; @line = 187; initialized = true; ]
        var BH_label19_title as Symbol;
        [ @file = "Rez.mc"; @line = 188; initialized = true; ]
        var DecalageVague_title as Symbol;
        [ @file = "Rez.mc"; @line = 189; initialized = true; ]
        var BH_Time10_title as Symbol;
        [ @file = "Rez.mc"; @line = 190; initialized = true; ]
        var BH_subLabel13_title as Symbol;
        [ @file = "Rez.mc"; @line = 191; initialized = true; ]
        var BH_Time1_title as Symbol;
        [ @file = "Rez.mc"; @line = 192; initialized = true; ]
        var BH_label2_title as Symbol;
        [ @file = "Rez.mc"; @line = 193; initialized = true; ]
        var BH_subLabel20_title as Symbol;
        [ @file = "Rez.mc"; @line = 194; initialized = true; ]
        var AppVersionTitle as Symbol;
        [ @file = "Rez.mc"; @line = 195; initialized = true; ]
        var BH_Time15_title as Symbol;
        [ @file = "Rez.mc"; @line = 196; initialized = true; ]
        var BH_label8_title as Symbol;
        [ @file = "Rez.mc"; @line = 197; initialized = true; ]
        var BH_label20_title as Symbol;
        [ @file = "Rez.mc"; @line = 198; initialized = true; ]
        var MenuLabelAlarme as Symbol;
        [ @file = "Rez.mc"; @line = 199; initialized = true; ]
        var unit_percent as Symbol;
        [ @file = "Rez.mc"; @line = 200; initialized = true; ]
        var BH_label1_title as Symbol;
        [ @file = "Rez.mc"; @line = 201; initialized = true; ]
        var BH_subLabel12_title as Symbol;
        [ @file = "Rez.mc"; @line = 202; initialized = true; ]
        var BH_subLabel15_title as Symbol;
        [ @file = "Rez.mc"; @line = 203; initialized = true; ]
        var BH_length_Error as Symbol;
        [ @file = "Rez.mc"; @line = 204; initialized = true; ]
        var BH_subLabel8_title as Symbol;
        [ @file = "Rez.mc"; @line = 205; initialized = true; ]
        var BH_Time8_title as Symbol;
        [ @file = "Rez.mc"; @line = 206; initialized = true; ]
        var BH_label12_title as Symbol;
        [ @file = "Rez.mc"; @line = 207; initialized = true; ]
        var BH_Time12_title as Symbol;
        [ @file = "Rez.mc"; @line = 208; initialized = true; ]
        var SousMenuLabelBarrieres as Symbol;
        [ @file = "Rez.mc"; @line = 209; initialized = true; ]
        var MenuLabelParametresPassageAutoOFF as Symbol;
        [ @file = "Rez.mc"; @line = 210; initialized = true; ]
        var MenuSousLabelBarriereSuivante as Symbol;
        [ @file = "Rez.mc"; @line = 211; initialized = true; ]
        var BH_subLabel19_title as Symbol;
        [ @file = "Rez.mc"; @line = 212; initialized = true; ]
        var BH_label15_title as Symbol;
        [ @file = "Rez.mc"; @line = 213; initialized = true; ]
        var BH_subLabel5_title as Symbol;
        [ @file = "Rez.mc"; @line = 214; initialized = true; ]
        var BH_Time5_title as Symbol;
        [ @file = "Rez.mc"; @line = 215; initialized = true; ]
        var BH_label18_title as Symbol;
        [ @file = "Rez.mc"; @line = 216; initialized = true; ]
        var BH_Time19_title as Symbol;
        [ @file = "Rez.mc"; @line = 217; initialized = true; ]
        var BH_subLabel2_title as Symbol;
        [ @file = "Rez.mc"; @line = 218; initialized = true; ]
        var BH_label11_title as Symbol;
        [ @file = "Rez.mc"; @line = 219; initialized = true; ]
        var BH_Time2_title as Symbol;
        [ @file = "Rez.mc"; @line = 220; initialized = true; ]
        var BH_Time9_title as Symbol;
        [ @file = "Rez.mc"; @line = 221; initialized = true; ]
        var MenuLabelParametresPassageAuto as Symbol;
        [ @file = "Rez.mc"; @line = 222; initialized = true; ]
        var BH_label4_title as Symbol;
        [ @file = "Rez.mc"; @line = 223; initialized = true; ]
        var BH_subLabel9_title as Symbol;
        [ @file = "Rez.mc"; @line = 224; initialized = true; ]
        var unit_percentBattery as Symbol;
        [ @file = "Rez.mc"; @line = 225; initialized = true; ]
        var BH_Time16_title as Symbol;
        [ @file = "Rez.mc"; @line = 226; initialized = true; ]
        var AppName as Symbol;
        [ @file = "Rez.mc"; @line = 227; initialized = true; ]
        var BH_subLabel11_title as Symbol;
        [ @file = "Rez.mc"; @line = 228; initialized = true; ]
        var BH_Time6_title as Symbol;
        [ @file = "Rez.mc"; @line = 229; initialized = true; ]
        var MenuSousLabelBarrieres as Symbol;
        [ @file = "Rez.mc"; @line = 230; initialized = true; ]
        var isAutomatique_title as Symbol;
        [ @file = "Rez.mc"; @line = 231; initialized = true; ]
        var BH_Time13_title as Symbol;
        [ @file = "Rez.mc"; @line = 232; initialized = true; ]
        var DefautLabelBarrieres as Symbol;
        [ @file = "Rez.mc"; @line = 233; initialized = true; ]
        var MenuLabelAlarmeON as Symbol;
        [ @file = "Rez.mc"; @line = 234; initialized = true; ]
        var BH_subLabel18_title as Symbol;
        [ @file = "Rez.mc"; @line = 235; initialized = true; ]
        var MenuSousLabelLastBarriere as Symbol;
        [ @file = "Rez.mc"; @line = 236; initialized = true; ]
        var BH_label7_title as Symbol;
        [ @file = "Rez.mc"; @line = 237; initialized = true; ]
        var BH_subLabel6_title as Symbol;
        [ @file = "Rez.mc"; @line = 238; initialized = true; ]
        var BH_label14_title as Symbol;
        [ @file = "Rez.mc"; @line = 239; initialized = true; ]
        var BH_subLabel1_title as Symbol;
        [ @file = "Rez.mc"; @line = 240; initialized = true; ]
        var BH_Time3_title as Symbol;
        [ @file = "Rez.mc"; @line = 241; initialized = true; ]
        var BH_label17_title as Symbol;
        [ @file = "Rez.mc"; @line = 242; initialized = true; ]
        var BH_subLabel17_title as Symbol;
        [ @file = "Rez.mc"; @line = 243; initialized = true; ]
        var BH_label3_title as Symbol;
        [ @file = "Rez.mc"; @line = 244; initialized = true; ]
        var BH_subLabel10_title as Symbol;
        [ @file = "Rez.mc"; @line = 245; initialized = true; ]
        var Barrieres2Alerte as Symbol;
        [ @file = "Rez.mc"; @line = 246; initialized = true; ]
        var MenuLabel as Symbol;
        [ @file = "Rez.mc"; @line = 247; initialized = true; ]
        var BH_Time17_title as Symbol;
        [ @file = "Rez.mc"; @line = 248; initialized = true; ]
        var BH_label13_title as Symbol;
        [ @file = "Rez.mc"; @line = 249; initialized = true; ]
        var BH_Time7_title as Symbol;
        [ @file = "Rez.mc"; @line = 250; initialized = true; ]
        var BH_subLabel14_title as Symbol;
        [ @file = "Rez.mc"; @line = 251; initialized = true; ]
        var BH_Time11_title as Symbol;
        [ @file = "Rez.mc"; @line = 252; initialized = true; ]
        var lap_label as Symbol;
        [ @file = "Rez.mc"; @line = 253; initialized = true; ]
        var battery_label as Symbol;
        [ @file = "Rez.mc"; @line = 254; initialized = true; ]
        var MenuLabelBarrieres as Symbol;
        [ @file = "Rez.mc"; @line = 255; initialized = true; ]
        var BH_label6_title as Symbol;
        [ @file = "Rez.mc"; @line = 256; initialized = true; ]
        var BH_label10_title as Symbol;
        [ @file = "Rez.mc"; @line = 257; initialized = true; ]
        var ValiderBarriereSuivante as Symbol;
        [ @file = "Rez.mc"; @line = 258; initialized = true; ]
        var BH_Time14_title as Symbol;
        [ @file = "Rez.mc"; @line = 259; initialized = true; ]
        var unit_step as Symbol;
        [ @file = "Rez.mc"; @line = 260; initialized = true; ]
        var MenuLabelParametresPassageAutoON as Symbol;
    }
}
<init> {
}
